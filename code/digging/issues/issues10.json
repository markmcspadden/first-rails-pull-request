[
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8672",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8672/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8672/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8672/events",
    "html_url": "https://github.com/rails/rails/issues/8672",
    "id": 9602198,
    "number": 8672,
    "title": "ActiveRecord: has_and_belongs_to_many - insert adds two rows instead of one",
    "user": {
      "login": "killergti",
      "id": 2429102,
      "avatar_url": "https://secure.gravatar.com/avatar/283188cfae6d5e7b8e432125e5eaf27e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "283188cfae6d5e7b8e432125e5eaf27e",
      "url": "https://api.github.com/users/killergti",
      "html_url": "https://github.com/killergti",
      "followers_url": "https://api.github.com/users/killergti/followers",
      "following_url": "https://api.github.com/users/killergti/following",
      "gists_url": "https://api.github.com/users/killergti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/killergti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/killergti/subscriptions",
      "organizations_url": "https://api.github.com/users/killergti/orgs",
      "repos_url": "https://api.github.com/users/killergti/repos",
      "events_url": "https://api.github.com/users/killergti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/killergti/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2013-01-01T13:49:13Z",
    "updated_at": "2013-01-01T15:32:51Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "I'm using rails 3.1.0\r\nI am observing the same issue, as described here: http://ryanbigg.com/2010/04/has_and_belongs_to_many-double-insert/\r\n\r\n```ruby\r\nclass Ticket < ActiveRecord::Base\r\nafter_create :creator_watches_me\r\nhas_and_belongs_to_many :watchers, :join_table => \"ticket_watchers\",\r\n    :class_name => \"User\"\r\nprivate\r\n  def creator_watches_me\r\n    self.watchers << user\r\n  end\r\nend\r\n```\r\n\r\nSo when i insert a new ticket, here what it shows:\r\n\r\n```\r\n  SQL (21.6ms)  INSERT INTO \"tickets\" (\"created_at\", \"description\", \"project_id\", \"state_id\", \"title\", \"updated_at\", \"user_id\") VALUES (?, ?, ?, ?, ?, ?, ?)  [[\"created_at\", Tue, 01 Jan 2013 13:32:58 UTC +00:00], [\"description\", \"assdklsdj ;lksdjglksdjgsdjpgsdgd \\r\\n\"], [\"project_id\", 2], [\"state_id\", nil], [\"title\", \"Implement delete tags functionality\"], [\"updated_at\", Tue, 01 Jan 2013 13:32:58 UTC +00:00], [\"user_id\", 2]]\r\n  User Load (0.1ms)  SELECT \"users\".* FROM \"users\" INNER JOIN \"ticket_watchers\" ON \"users\".\"id\" = \"ticket_watchers\".\"user_id\" WHERE \"ticket_watchers\".\"ticket_id\" = 6\r\n   (0.1ms)  INSERT INTO \"ticket_watchers\" (\"ticket_id\", \"user_id\") VALUES (6, 2)\r\n   (0.0ms)  INSERT INTO \"ticket_watchers\" (\"ticket_id\", \"user_id\") VALUES (6, 2)\r\n```\r\n\r\nAlso i could add, that i have an observer, registered in this Ticket class. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8639",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8639/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8639/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8639/events",
    "html_url": "https://github.com/rails/rails/issues/8639",
    "id": 9558549,
    "number": 8639,
    "title": "Add AR::Base#valid! method",
    "user": {
      "login": "bogdan",
      "id": 122436,
      "avatar_url": "https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "91913f6ab8085bab0f2aa43995ba8ca2",
      "url": "https://api.github.com/users/bogdan",
      "html_url": "https://github.com/bogdan",
      "followers_url": "https://api.github.com/users/bogdan/followers",
      "following_url": "https://api.github.com/users/bogdan/following",
      "gists_url": "https://api.github.com/users/bogdan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bogdan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bogdan/subscriptions",
      "organizations_url": "https://api.github.com/users/bogdan/orgs",
      "repos_url": "https://api.github.com/users/bogdan/repos",
      "events_url": "https://api.github.com/users/bogdan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bogdan/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "rafaelfranca",
      "id": 47848,
      "avatar_url": "https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "0525b332aafb83307b32d9747a93de03",
      "url": "https://api.github.com/users/rafaelfranca",
      "html_url": "https://github.com/rafaelfranca",
      "followers_url": "https://api.github.com/users/rafaelfranca/followers",
      "following_url": "https://api.github.com/users/rafaelfranca/following",
      "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
      "repos_url": "https://api.github.com/users/rafaelfranca/repos",
      "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
      "type": "User"
    },
    "milestone": null,
    "comments": 10,
    "created_at": "2012-12-28T13:17:43Z",
    "updated_at": "2013-03-02T23:24:48Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8639",
      "diff_url": "https://github.com/rails/rails/pull/8639.diff",
      "patch_url": "https://github.com/rails/rails/pull/8639.patch"
    },
    "body": "This is helper method in case when some operations should be done on a record before saving. But they doesn't make sence if record is invalid.\r\n\r\n``` ruby\r\ndef create_developer_from_linkedin(parameters)\r\n  d = Developer.new(parameters)\r\n  d.valid!\r\n  d.import_linkedin_profile\r\n  d.save!\r\nend"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8638",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8638/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8638/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8638/events",
    "html_url": "https://github.com/rails/rails/issues/8638",
    "id": 9557959,
    "number": 8638,
    "title": "Improve a way to handle errors for collection nested attributes",
    "user": {
      "login": "bogdan",
      "id": 122436,
      "avatar_url": "https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "91913f6ab8085bab0f2aa43995ba8ca2",
      "url": "https://api.github.com/users/bogdan",
      "html_url": "https://github.com/bogdan",
      "followers_url": "https://api.github.com/users/bogdan/followers",
      "following_url": "https://api.github.com/users/bogdan/following",
      "gists_url": "https://api.github.com/users/bogdan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bogdan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bogdan/subscriptions",
      "organizations_url": "https://api.github.com/users/bogdan/orgs",
      "repos_url": "https://api.github.com/users/bogdan/repos",
      "events_url": "https://api.github.com/users/bogdan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bogdan/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 10,
    "created_at": "2012-12-28T12:28:25Z",
    "updated_at": "2013-03-05T08:30:02Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8638",
      "diff_url": "https://github.com/rails/rails/pull/8638.diff",
      "patch_url": "https://github.com/rails/rails/pull/8638.patch"
    },
    "body": "Example:\r\n\r\n``` ruby\r\n    Employment.validates :company, :presence => true\r\n    Developer.has_many :employments\r\n    Developer.accepts_nested_attributes_for :employments\r\n    d = Developer.new\r\n    2.times { d.employments.build }\r\n    d.valid?\r\n    d.errors.messages\r\n```\r\n\r\nOld result:\r\n\r\n``` ruby\r\n    {\r\n      :\"employments.company\"=>[\"can't be blank\"],\r\n      :email=>[\"can't be blank\"],\r\n      :password=>[\"can't be blank\"]\r\n    }\r\n\r\n```\r\n\r\nSee that it is impossible to detect which `Employment` object is error related to.\r\nIn order to fix that propose to use an index(as Employment could be new - we can not use an id).\r\nOnly applied to collection associations.\r\n\r\nNew result\r\n\r\n``` ruby\r\n    {\r\n      :\"employments[0].company\"=>[\"can't be blank\"],\r\n      :\"employments[1].company\"=>[\"can't be blank\"],\r\n      :email=>[\"can't be blank\"],\r\n      :password=>[\"can't be blank\"]\r\n    }\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8615",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8615/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8615/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8615/events",
    "html_url": "https://github.com/rails/rails/issues/8615",
    "id": 9521338,
    "number": 8615,
    "title": "[ActiveSupport] [Cache] Inconsistent behavior in namespaced_key",
    "user": {
      "login": "bbenezech",
      "id": 26794,
      "avatar_url": "https://secure.gravatar.com/avatar/c1607873b99845b2cd53f8634860d4d4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "c1607873b99845b2cd53f8634860d4d4",
      "url": "https://api.github.com/users/bbenezech",
      "html_url": "https://github.com/bbenezech",
      "followers_url": "https://api.github.com/users/bbenezech/followers",
      "following_url": "https://api.github.com/users/bbenezech/following",
      "gists_url": "https://api.github.com/users/bbenezech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bbenezech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bbenezech/subscriptions",
      "organizations_url": "https://api.github.com/users/bbenezech/orgs",
      "repos_url": "https://api.github.com/users/bbenezech/repos",
      "events_url": "https://api.github.com/users/bbenezech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bbenezech/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2012-12-26T14:06:25Z",
    "updated_at": "2013-03-12T05:28:43Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8615",
      "diff_url": "https://github.com/rails/rails/pull/8615.diff",
      "patch_url": "https://github.com/rails/rails/pull/8615.patch"
    },
    "body": "fix for #8614\r\n\r\n```bash\r\n\r\n>  Rails.cache.send(:namespaced_key, User.first, {})\r\n => \"users/508fefdb54ca455644000003-20121226093034\" \r\n> Rails.cache.send(:namespaced_key, [User.first, User.last], {})\r\n => \"users/508fefdb54ca455644000003-20121226093034/users/50b7832354ca45f043000011-20121129154539\" \r\n> Rails.cache.send(:namespaced_key, [User.first], {})\r\n => \"508fefdb54ca455644000003\" \r\n\r\n# yurk, should probably be \"users/508fefdb54ca455644000003-20121226093034\" instead\r\n```\r\n\r\nAlso this is inconsistent with the (internally used) ActiveSupport::Cache.expand_cache_key\r\n\r\n```bash\r\n\r\n> ActiveSupport::Cache.expand_cache_key User.first\r\n => \"users/508fefdb54ca455644000003-20121226093034\" \r\n> ActiveSupport::Cache.expand_cache_key [User.first, User.last]\r\n => \"users/508fefdb54ca455644000003-20121226093034/users/50b7832354ca45f043000011-20121129154539\" \r\n>   ActiveSupport::Cache.expand_cache_key [User.first]\r\n => \"users/508fefdb54ca455644000003-20121226093034\" \r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8614",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8614/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8614/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8614/events",
    "html_url": "https://github.com/rails/rails/issues/8614",
    "id": 9521325,
    "number": 8614,
    "title": "[ActiveSupport] [Cache] Inconsistent behavior in namespaced_key with arrays",
    "user": {
      "login": "bbenezech",
      "id": 26794,
      "avatar_url": "https://secure.gravatar.com/avatar/c1607873b99845b2cd53f8634860d4d4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "c1607873b99845b2cd53f8634860d4d4",
      "url": "https://api.github.com/users/bbenezech",
      "html_url": "https://github.com/bbenezech",
      "followers_url": "https://api.github.com/users/bbenezech/followers",
      "following_url": "https://api.github.com/users/bbenezech/following",
      "gists_url": "https://api.github.com/users/bbenezech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bbenezech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bbenezech/subscriptions",
      "organizations_url": "https://api.github.com/users/bbenezech/orgs",
      "repos_url": "https://api.github.com/users/bbenezech/repos",
      "events_url": "https://api.github.com/users/bbenezech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bbenezech/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2012-12-26T14:05:28Z",
    "updated_at": "2013-03-12T05:41:25Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "```bash\r\n\r\n>  Rails.cache.send(:namespaced_key, User.first, {})\r\n => \"users/508fefdb54ca455644000003-20121226093034\" \r\n> Rails.cache.send(:namespaced_key, [User.first, User.last], {})\r\n => \"users/508fefdb54ca455644000003-20121226093034/users/50b7832354ca45f043000011-20121129154539\" \r\n> Rails.cache.send(:namespaced_key, [User.first], {})\r\n => \"508fefdb54ca455644000003\" \r\n\r\n# yurk, should probably be \"users/508fefdb54ca455644000003-20121226093034\" instead\r\n```\r\n\r\nAlso this is inconsistent with the (internally used) ActiveSupport::Cache.expand_cache_key\r\n\r\n```bash\r\n\r\n> ActiveSupport::Cache.expand_cache_key User.first\r\n => \"users/508fefdb54ca455644000003-20121226093034\" \r\n> ActiveSupport::Cache.expand_cache_key [User.first, User.last]\r\n => \"users/508fefdb54ca455644000003-20121226093034/users/50b7832354ca45f043000011-20121129154539\" \r\n>   ActiveSupport::Cache.expand_cache_key [User.first]\r\n => \"users/508fefdb54ca455644000003-20121226093034\" \r\n\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8579",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8579/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8579/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8579/events",
    "html_url": "https://github.com/rails/rails/issues/8579",
    "id": 9474060,
    "number": 8579,
    "title": "AR association works individually but not on includes/joins",
    "user": {
      "login": "cpuguy83",
      "id": 799078,
      "avatar_url": "https://secure.gravatar.com/avatar/fc56b9eea2642344e0b87eda2b52160b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "fc56b9eea2642344e0b87eda2b52160b",
      "url": "https://api.github.com/users/cpuguy83",
      "html_url": "https://github.com/cpuguy83",
      "followers_url": "https://api.github.com/users/cpuguy83/followers",
      "following_url": "https://api.github.com/users/cpuguy83/following",
      "gists_url": "https://api.github.com/users/cpuguy83/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpuguy83/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpuguy83/subscriptions",
      "organizations_url": "https://api.github.com/users/cpuguy83/orgs",
      "repos_url": "https://api.github.com/users/cpuguy83/repos",
      "events_url": "https://api.github.com/users/cpuguy83/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpuguy83/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2012-12-21T19:44:57Z",
    "updated_at": "2013-04-02T11:34:09Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "I have a class `Tracker::Db::Service` with the following associations:\r\n\r\n    has_many :source_links, class_name: :Link, foreign_key: :source_key, conditions: { state_id: 1, source_object_id: 3 }\r\n    has_many :target_links, class_name: :Link, foreign_key: :target_key, conditions: { state_id: 1, target_object_id: 3 }\r\n    has_many :work_order_targets, through: :source_links, source: :work_order_as_target, class_name: :WorkOrder\r\n    has_many :work_order_sources, through: :target_links, source: :work_order_as_source, class_name: :WorkOrder\r\n\r\nAnd then `Tracker::Db::Link` has these associations:\r\n\r\n    belongs_to :work_order_as_target, class_name: :WorkOrder, foreign_key: :target_key, conditions: { target_object_id: 11 }\r\n    belongs_to :work_order_as_source, class_name: :WorkOrder, foreign_key: :source_key, conditions: { source_object_id: 11 }\r\n\r\nWhen I try to traverse these associations from an instance, such as: `service.work_order_targets`, it works perfectly. \r\n\r\nHowever if I try to include/join these in a query I run into issues\r\n\r\n    Tracker::Db::Service.includes(:work_order_targets).limit(10)\r\n\r\n    ActiveRecord::StatementInvalid: Mysql2::Error: Unknown column 'change_workorder.target_object_id' in 'where clause': SELECT `change_workorder`.* FROM `change_workorder`  WHERE `change_workorder`.`id` IN (4262, 4239, 4058, 4062, 4258, 4242, 4240, 4256, 4241, 4253) AND (`change_workorder`.`target_object_id` = 11)\r\n\r\nIt is building the query incorrectly. I have tried using the hash syntax for specifying conditions but this doesn't work either, it just becomes change_workorder.target_object_id. It's doing this on both relationships work_order_targets, work_order_sources\r\n\r\n    Tracker::Db::Service has id, name \r\n    Tracker::Db::Link has source_object_id, source_key, target_object_id, target_key \r\n    Tracker::Db::WorkOrder has id, name\r\n\r\nUnfortunately this is a 3rd parties application database ( open source project, OTRS + ITSM Module ), so I don't really have control over the structure, I'm just hooking our Rails app into it."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8578",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8578/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8578/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8578/events",
    "html_url": "https://github.com/rails/rails/issues/8578",
    "id": 9470229,
    "number": 8578,
    "title": "Routes move leading slash to immediate following optional parameter ",
    "user": {
      "login": "ml",
      "id": 1509,
      "avatar_url": "https://secure.gravatar.com/avatar/07fb1f108e968f7b8573307eefddd66f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "07fb1f108e968f7b8573307eefddd66f",
      "url": "https://api.github.com/users/ml",
      "html_url": "https://github.com/ml",
      "followers_url": "https://api.github.com/users/ml/followers",
      "following_url": "https://api.github.com/users/ml/following",
      "gists_url": "https://api.github.com/users/ml/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ml/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ml/subscriptions",
      "organizations_url": "https://api.github.com/users/ml/orgs",
      "repos_url": "https://api.github.com/users/ml/repos",
      "events_url": "https://api.github.com/users/ml/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ml/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2012-12-21T17:05:06Z",
    "updated_at": "2012-12-25T10:27:05Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "For such a routes definition:\r\n\r\n```ruby\r\nRoutesBug::Application.routes.draw do\r\n  scope \"/(:kiszka-):koza\" do\r\n    root to: \"hello#index\"\r\n  end\r\nend\r\n```\r\n\r\n```\r\n$ rake routes\r\nroot  (/:kiszka-):koza(.:format) hello#index\r\n````\r\n\r\nand thus path like `/foo` can't be matched. The only way to get the path matched is to provide both parameters like `/foo-bar`. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8577",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8577/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8577/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8577/events",
    "html_url": "https://github.com/rails/rails/issues/8577",
    "id": 9464184,
    "number": 8577,
    "title": "Additional save inside a transaction will mess up transaction state",
    "user": {
      "login": "sidonath",
      "id": 15397,
      "avatar_url": "https://secure.gravatar.com/avatar/d28da594945b3665f6c06bd4e7dc8e10?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "d28da594945b3665f6c06bd4e7dc8e10",
      "url": "https://api.github.com/users/sidonath",
      "html_url": "https://github.com/sidonath",
      "followers_url": "https://api.github.com/users/sidonath/followers",
      "following_url": "https://api.github.com/users/sidonath/following",
      "gists_url": "https://api.github.com/users/sidonath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sidonath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sidonath/subscriptions",
      "organizations_url": "https://api.github.com/users/sidonath/orgs",
      "repos_url": "https://api.github.com/users/sidonath/repos",
      "events_url": "https://api.github.com/users/sidonath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sidonath/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2012-12-21T13:09:03Z",
    "updated_at": "2013-04-10T18:22:41Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "The following code, will mess up transaction state on `user` instance:\r\n\r\n```ruby\r\nuser = User.new\r\nUser.transaction do\r\n  user.save!\r\n  user.save!\r\nend\r\n\r\nuser.instance_variable_get(:@_start_transaction_state)\r\n# => {:id=>1, :new_record=>true, :destroyed=>false, :level=>1, :frozen?=>false}\r\n```\r\n\r\nThis will cause a next failed transaction that includes `user` to set `user.new_record?` to `true`, which breaks the next attempt to save `user` because AR will try to INSERT it, thus duplicating primary key in DB (resulting in something along the lines of \"PG::Error: ERROR: duplicate key value violates unique constraint \"users_pkey\" DETAIL: Key (id)=(1) already exists.\").\r\n\r\nThe problem is that value of `:new_record` has not been updated after the transaction was committed. This was fixed in 44d1804, but that commit wasn't backported to 3.2 branch.\r\n\r\nAnother question is if `@_start_transaction_state` should even persist on `user` after the transaction is completed.\r\n\r\n/cc @jjb"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8571",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8571/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8571/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8571/events",
    "html_url": "https://github.com/rails/rails/issues/8571",
    "id": 9436743,
    "number": 8571,
    "title": "Fixed ActiveSupport inflector underscore regex",
    "user": {
      "login": "khozlov",
      "id": 151500,
      "avatar_url": "https://secure.gravatar.com/avatar/ee718cf08d1c5f32b312e924105c6e35?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "ee718cf08d1c5f32b312e924105c6e35",
      "url": "https://api.github.com/users/khozlov",
      "html_url": "https://github.com/khozlov",
      "followers_url": "https://api.github.com/users/khozlov/followers",
      "following_url": "https://api.github.com/users/khozlov/following",
      "gists_url": "https://api.github.com/users/khozlov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khozlov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khozlov/subscriptions",
      "organizations_url": "https://api.github.com/users/khozlov/orgs",
      "repos_url": "https://api.github.com/users/khozlov/repos",
      "events_url": "https://api.github.com/users/khozlov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khozlov/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2012-12-20T15:19:07Z",
    "updated_at": "2013-04-02T04:16:51Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8571",
      "diff_url": "https://github.com/rails/rails/pull/8571.diff",
      "patch_url": "https://github.com/rails/rails/pull/8571.patch"
    },
    "body": "The inflector underscore regex was not matching nested acronyms, which causes problems for mixed-case acronyms (i.e. calling `#underscore` on `\"HTTP::RESTful\"` with a `\"RESTful\"` acronym).\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8553",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8553/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8553/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8553/events",
    "html_url": "https://github.com/rails/rails/issues/8553",
    "id": 9386483,
    "number": 8553,
    "title": "Updated #5829: Added --editor (-e) option to open all generated & copied files in the user's editor",
    "user": {
      "login": "ndbroadbent",
      "id": 139536,
      "avatar_url": "https://secure.gravatar.com/avatar/4931eceec58528529fd004e56af197c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "4931eceec58528529fd004e56af197c4",
      "url": "https://api.github.com/users/ndbroadbent",
      "html_url": "https://github.com/ndbroadbent",
      "followers_url": "https://api.github.com/users/ndbroadbent/followers",
      "following_url": "https://api.github.com/users/ndbroadbent/following",
      "gists_url": "https://api.github.com/users/ndbroadbent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ndbroadbent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ndbroadbent/subscriptions",
      "organizations_url": "https://api.github.com/users/ndbroadbent/orgs",
      "repos_url": "https://api.github.com/users/ndbroadbent/repos",
      "events_url": "https://api.github.com/users/ndbroadbent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ndbroadbent/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/railties",
        "name": "railties",
        "color": "8BE06E"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 12,
    "created_at": "2012-12-18T23:59:56Z",
    "updated_at": "2013-03-01T19:44:10Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8553",
      "diff_url": "https://github.com/rails/rails/pull/8553.diff",
      "patch_url": "https://github.com/rails/rails/pull/8553.patch"
    },
    "body": "This is an updated version of #5829, with [@rafaelfranca's proposal to make it higher level](https://github.com/rails/rails/pull/5829#issuecomment-7098334).\r\n\r\nThe `--editor` option is now aliased as `-e`, and is available for all generators that inherit from `Rails::Generators::Base`. The default editor is now `GUI_EDITOR`, and falls back to `EDITOR`.\r\n\r\nIt wraps Thor's `template` and `copy_file` actions, and opens generated/copied files in your text editor if `options[\"editor\"]` is present.\r\n\r\nP.S. I initially tried to just open the main generated files, but I think it's better to just open them all. If you run the model generator, you'll probably want to edit the migration, model, and tests. (Instead of just the model.)\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8549",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8549/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8549/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8549/events",
    "html_url": "https://github.com/rails/rails/issues/8549",
    "id": 9373422,
    "number": 8549,
    "title": "[Feature proposal, in development] Derived Inverses: A Start",
    "user": {
      "login": "iamvery",
      "id": 79619,
      "avatar_url": "https://secure.gravatar.com/avatar/1433d0176e764f9ce48f70673baa72e8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "1433d0176e764f9ce48f70673baa72e8",
      "url": "https://api.github.com/users/iamvery",
      "html_url": "https://github.com/iamvery",
      "followers_url": "https://api.github.com/users/iamvery/followers",
      "following_url": "https://api.github.com/users/iamvery/following",
      "gists_url": "https://api.github.com/users/iamvery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamvery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamvery/subscriptions",
      "organizations_url": "https://api.github.com/users/iamvery/orgs",
      "repos_url": "https://api.github.com/users/iamvery/repos",
      "events_url": "https://api.github.com/users/iamvery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamvery/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2012-12-18T16:44:22Z",
    "updated_at": "2012-12-18T16:51:46Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8549",
      "diff_url": "https://github.com/rails/rails/pull/8549.diff",
      "patch_url": "https://github.com/rails/rails/pull/8549.patch"
    },
    "body": "This is my attempt to start the implementation of automatically derived inverse associations. I was heavily inspired this [this](https://github.com/rails/rails/issues/6161#issuecomment-7238602) comment. As it turns out, the problem seems to be quite difficult to solve.\r\n\r\n6722292 and 904dc21 are essentially the automatic inverse implementation. The other 3 commits are attempting to fix failing tests out of the automatic derivation of inverses.\r\n\r\nI've struggled for several days to figure out all the interesting problems that this implementation has presented, but finally I'm choosing to submit it to the community so that we can come to the right solution together!\r\n\r\nThe primary issue seems to be how to identify when inverses are not appropriate. Its easy to guess what the inverse might be, but its apparent to me now that there are a lot of places they just shouldn't or can't exist. So assuming there will be an inverse can lead to bad things :). I ran into a lot of issues like #7250 #653 #7809, etc.\r\n\r\nI'm sorry to deliver known failing commits, but perhaps this can spur process of developing this feature to completion!\r\n\r\n---\r\n\r\nBasically I decided to stop and submit because 1) I've started going in circles 2) I've spent way more time on this than planned 3) I thought it'd benefit from the community."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8547",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8547/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8547/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8547/events",
    "html_url": "https://github.com/rails/rails/issues/8547",
    "id": 9364336,
    "number": 8547,
    "title": "fix for messages in invalid encoding from db-drivers",
    "user": {
      "login": "printercu",
      "id": 1144890,
      "avatar_url": "https://secure.gravatar.com/avatar/bfb334bdcd963ba9f7de6338b237db9b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "bfb334bdcd963ba9f7de6338b237db9b",
      "url": "https://api.github.com/users/printercu",
      "html_url": "https://github.com/printercu",
      "followers_url": "https://api.github.com/users/printercu/followers",
      "following_url": "https://api.github.com/users/printercu/following",
      "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
      "organizations_url": "https://api.github.com/users/printercu/orgs",
      "repos_url": "https://api.github.com/users/printercu/repos",
      "events_url": "https://api.github.com/users/printercu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/printercu/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2012-12-18T11:14:18Z",
    "updated_at": "2012-12-26T16:06:14Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8547",
      "diff_url": "https://github.com/rails/rails/pull/8547.diff",
      "patch_url": "https://github.com/rails/rails/pull/8547.patch"
    },
    "body": "When postgre query fails it gives sometimes error that could not be converted to utf and app fails with\r\n\r\n```\r\nactiverecord (3.2.8) lib/active_record/connection_adapters/abstract_adapter.rb:282:in `rescue in log'\r\nactiverecord (3.2.8) lib/active_record/connection_adapters/abstract_adapter.rb:275:in `log'\r\nactiverecord (3.2.8) lib/active_record/connection_adapters/postgresql_adapter.rb:674:in `exec_delete'\r\nactiverecord (3.2.8) lib/active_record/connection_adapters/abstract/database_statements.rb:96:in `update'\r\nactiverecord (3.2.8) lib/active_record/connection_adapters/abstract/query_cache.rb:14:in `update'\r\n....\r\n```\r\n\r\n`e.message.encode('utf-8')` failed with\r\n```\r\n\"\\xD0\" from ASCII-8BIT to UTF-8\r\n```\r\n\r\nI've added explicit `encode()` with `:replace` parameter."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8533",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8533/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8533/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8533/events",
    "html_url": "https://github.com/rails/rails/issues/8533",
    "id": 9324284,
    "number": 8533,
    "title": "Rails Engine not properly generating named paths when a used nested resource and render is called through a helper method",
    "user": {
      "login": "LockeCole117",
      "id": 877224,
      "avatar_url": "https://secure.gravatar.com/avatar/53365b58dde0c86d879fe5c568297593?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "53365b58dde0c86d879fe5c568297593",
      "url": "https://api.github.com/users/LockeCole117",
      "html_url": "https://github.com/LockeCole117",
      "followers_url": "https://api.github.com/users/LockeCole117/followers",
      "following_url": "https://api.github.com/users/LockeCole117/following",
      "gists_url": "https://api.github.com/users/LockeCole117/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LockeCole117/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LockeCole117/subscriptions",
      "organizations_url": "https://api.github.com/users/LockeCole117/orgs",
      "repos_url": "https://api.github.com/users/LockeCole117/repos",
      "events_url": "https://api.github.com/users/LockeCole117/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LockeCole117/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/engines",
        "name": "engines",
        "color": "e102d8"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2012-12-17T05:09:28Z",
    "updated_at": "2013-02-02T13:21:40Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Hello,\r\n\r\nI've started to experiment with Rails engines, and noticed some odd behavior with Rails Engines and generating names paths when the engine is mounted as a nested resource.\r\n\r\n    Rails.application.routes.draw do\r\n        resources :people do\r\n            #when the engine is mounted as a nested resource, it works as desired, except when it comes to generating our paths in our engine's helpers\r\n            mount BucketList::Engine => \"/\" #the goal is to access our lists like: person/:person_id/lists\r\n        end\r\n\r\n        #I don't want the route to be mounted at the top level, lists are owned by people\r\n        #mount BucketList::Engine => \"/bucket_list\"\r\n\r\n        #When I try to trick the route, I get the following error: ActionController::RoutingError (No route matches {}): app/views/people/show.html.erb:4:in `_app_views_people_show_html_erb___209278167088923249_70190424439760'\r\n        #mount BucketList::Engine => \"/people/:person_id/\"\r\n    end\r\n\r\n\r\nI have an engine that provides a simple todo list with items, and my dummy application creates a `Person` model. The lists can be owned, using a polymorphic association `ownable`. I have a helper method defined that is patched into `ActiveRecord::Base` named `has_list`, which gives the model the proper polymorphic association. This is mixed into the application in `engine.rb`.\r\n\r\nThe application works perfectly as a nested resource, which is great. However, I wanted to extend the functionality a bit further by creating a few helper methods to generate some \"standard\" views on the fly (like when showing a person's details, it would be nice if a list of all their todo lists was visible on that page).  I opted to create a helper method to accomplish this goal `ownable_list_list`, which would take an ownable object and generate a simple list of all items with links to show/edit/delete. The helper simple calls render on `_ownable_list_list.html.erb` in my engine\r\n\r\nfollowing the advice provided in [The Ruby on Rails Guides](http://guides.rubyonrails.org/engines.html#routes), I prefixed all of my named links in `bucket_list` (and even tried `person_bucket_list`, which is the name given by the routes in the dummy application). However, I receive the following error when trying to use these helpers:\r\n\r\n    undefined method `segment_keys' for nil:NilClass in app/views/people/show.html.erb:4:in `_app_views_people_show_html_erb___4217889445762085296_70138985747440'\r\n\r\nFor some reason it looks like when an engine is used as a nested resource, it is not properly being loaded up in `ActiveController` within our application  so that we can properly generate our named routes (even when the named route is prefixed by our engine name or our generated name from our application's route file). A reason this behavior does not occur when used as a proper nested resource is that the application relinquishes control to the Engine at that point, which has its own route file and version of `ActiveController`. Plus the rendering is done within the scope of the Engine, as opposed to our helper, which \"injects\" the rendering into the scope of the application.\r\n\r\nI've put my experiments into a git repo: https://github.com/LockeCole117/bucket_list\r\n\r\nExcuse the mess, today I just wanted to see what Rails Engines were capable of.\r\n\r\nThanks for your time.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8513",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8513/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8513/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8513/events",
    "html_url": "https://github.com/rails/rails/issues/8513",
    "id": 9272782,
    "number": 8513,
    "title": "test showing that the :digest option to CookieStore does absolutely nothing anymore",
    "user": {
      "login": "yyyc514",
      "id": 6473,
      "avatar_url": "https://secure.gravatar.com/avatar/fab2e0c720d6e979a551782631dca58e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "fab2e0c720d6e979a551782631dca58e",
      "url": "https://api.github.com/users/yyyc514",
      "html_url": "https://github.com/yyyc514",
      "followers_url": "https://api.github.com/users/yyyc514/followers",
      "following_url": "https://api.github.com/users/yyyc514/following",
      "gists_url": "https://api.github.com/users/yyyc514/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yyyc514/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yyyc514/subscriptions",
      "organizations_url": "https://api.github.com/users/yyyc514/orgs",
      "repos_url": "https://api.github.com/users/yyyc514/repos",
      "events_url": "https://api.github.com/users/yyyc514/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yyyc514/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2012-12-14T00:53:23Z",
    "updated_at": "2013-02-28T20:48:02Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8513",
      "diff_url": "https://github.com/rails/rails/pull/8513.diff",
      "patch_url": "https://github.com/rails/rails/pull/8513.patch"
    },
    "body": "Seems this was broken 3 years ago and no one noticed?\r\n\r\nhttps://github.com/rails/rails/commit/25f7c030e4ea440ea6c2a84c92118299753392d9\r\n\r\nNot sure how best to go about fixing it - if anyone cares?  This (:digest) was a good idea, but either no one is using it or has no idea it broke - since it would be a very silent failure."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8508",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8508/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8508/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8508/events",
    "html_url": "https://github.com/rails/rails/issues/8508",
    "id": 9250330,
    "number": 8508,
    "title": "uniqness is not working when using accepts_nested_attributes_for",
    "user": {
      "login": "jmaniv",
      "id": 254381,
      "avatar_url": "https://secure.gravatar.com/avatar/a5d5ef4ed45454c0a7cd443a9fb17779?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "a5d5ef4ed45454c0a7cd443a9fb17779",
      "url": "https://api.github.com/users/jmaniv",
      "html_url": "https://github.com/jmaniv",
      "followers_url": "https://api.github.com/users/jmaniv/followers",
      "following_url": "https://api.github.com/users/jmaniv/following",
      "gists_url": "https://api.github.com/users/jmaniv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmaniv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmaniv/subscriptions",
      "organizations_url": "https://api.github.com/users/jmaniv/orgs",
      "repos_url": "https://api.github.com/users/jmaniv/repos",
      "events_url": "https://api.github.com/users/jmaniv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmaniv/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2012-12-13T12:23:39Z",
    "updated_at": "2012-12-22T08:52:01Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "My environments are:\r\n\r\n```\r\nRails 3.0.9\r\nRuby 1.9.2p290\r\nRuby gems 1.8.8\r\nmysql2 (0.2.7)\r\n```\r\n\r\nMy models relationship like\r\n\r\n```\r\nclass Cart < ActiveRecord::Base\r\n   has_many :cart_items, :inverse_of => :cart, :dependent => :destroy\r\n   accepts_nested_attributes_for :cart_items, :allow_destroy => :true, :reject_if => proc { |attrs| attrs.all? { |k, v| v.blank? } }\r\n   validates_associated :cart_items\r\n   validates :cart_name, :presence => {:message => \"Must be filled\" }\r\nend\r\n```\r\n\r\n```\r\nclass CartItem < ActiveRecord::Base\r\n   belongs_to :cart, :inverse_of => :cart_items\r\n   validates :cart_item_no, :presence => {:message => \"Must be filled\"}, :uniqueness => {:message => \"Already exists\" }\r\nend\r\n```\r\n\r\n*Note*:  __cart__ and __cart_items__ records are empty in database table. \r\nI can save same _cart_item_no_ twice in _cart_items_ table by the example of below code.\r\n```\r\ncart = Cart.new(:cart_name => \"yyy\")\r\n  => #<Cart id: nil, cart_name: \"yyy\">\r\n2.times { cart.cart_items.build(:cart_item_no => 1000) }\r\n  => 2\r\ncart.cart_items \r\n  => [#<CartItem id: nil, cart_item_no: 1000>, #<CartItem id: nil, cart_item_no: 1000>]\r\ncart.valid?\r\n  => true\r\ncart.save!\r\n  => true\r\ncart\r\n  => #<Cart id: 1, cart_name: \"yyy\">\r\ncart.cart_items\r\n  => [#<CartItem id: 1, cart_item_no: 1000>, #<CartItem id: 2, cart_item_no: 1000>]\r\n```\r\nas per *CartItem* model validation, Rails should not allow to save same cart_item_no in table\r\n\r\nafter deep testing, I figure out the problem cause by accepts_nested_attributes_for.\r\nIf I removed the accepts_nested_attributes_for in *Cart* model, only _one_ *cart_items* record is saved in table as expected. example\r\n```\r\n  => [#<CartItem id: 1, cart_item_no: 1000>, #<CartItem id: nil, cart_item_no: 1000>]\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8491",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8491/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8491/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8491/events",
    "html_url": "https://github.com/rails/rails/issues/8491",
    "id": 9206612,
    "number": 8491,
    "title": "Issue #8442",
    "user": {
      "login": "igagnidz",
      "id": 289754,
      "avatar_url": "https://secure.gravatar.com/avatar/f51ec049afbab6feac78771488d91300?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "f51ec049afbab6feac78771488d91300",
      "url": "https://api.github.com/users/igagnidz",
      "html_url": "https://github.com/igagnidz",
      "followers_url": "https://api.github.com/users/igagnidz/followers",
      "following_url": "https://api.github.com/users/igagnidz/following",
      "gists_url": "https://api.github.com/users/igagnidz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igagnidz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igagnidz/subscriptions",
      "organizations_url": "https://api.github.com/users/igagnidz/orgs",
      "repos_url": "https://api.github.com/users/igagnidz/repos",
      "events_url": "https://api.github.com/users/igagnidz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igagnidz/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 12,
    "created_at": "2012-12-12T05:48:15Z",
    "updated_at": "2013-04-07T18:55:37Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8491",
      "diff_url": "https://github.com/rails/rails/pull/8491.diff",
      "patch_url": "https://github.com/rails/rails/pull/8491.patch"
    },
    "body": "So I tried using hub gem to do a pull request for the following issue: https://github.com/rails/rails/issues/8442\r\n\r\nBut I keep getting 422 so I decided to stop fighting it and do it through github's GUI.If someone can attach the pull request to issue 8442 that would be awesome. \r\n\r\nThanks."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8489",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8489/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8489/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8489/events",
    "html_url": "https://github.com/rails/rails/issues/8489",
    "id": 9185212,
    "number": 8489,
    "title": "Fix relative_url_root in integration tests (#8480)",
    "user": {
      "login": "dugsmith",
      "id": 3262,
      "avatar_url": "https://secure.gravatar.com/avatar/e23f8b41a875eccbc39c52be3a444463?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "e23f8b41a875eccbc39c52be3a444463",
      "url": "https://api.github.com/users/dugsmith",
      "html_url": "https://github.com/dugsmith",
      "followers_url": "https://api.github.com/users/dugsmith/followers",
      "following_url": "https://api.github.com/users/dugsmith/following",
      "gists_url": "https://api.github.com/users/dugsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dugsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dugsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/dugsmith/orgs",
      "repos_url": "https://api.github.com/users/dugsmith/repos",
      "events_url": "https://api.github.com/users/dugsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dugsmith/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "pixeltrix",
      "id": 6321,
      "avatar_url": "https://secure.gravatar.com/avatar/b14001f2b40640dd6cb63f0e8f1f4869?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "b14001f2b40640dd6cb63f0e8f1f4869",
      "url": "https://api.github.com/users/pixeltrix",
      "html_url": "https://github.com/pixeltrix",
      "followers_url": "https://api.github.com/users/pixeltrix/followers",
      "following_url": "https://api.github.com/users/pixeltrix/following",
      "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
      "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
      "repos_url": "https://api.github.com/users/pixeltrix/repos",
      "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
      "type": "User"
    },
    "milestone": null,
    "comments": 9,
    "created_at": "2012-12-11T16:31:18Z",
    "updated_at": "2013-04-16T18:11:42Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8489",
      "diff_url": "https://github.com/rails/rails/pull/8489.diff",
      "patch_url": "https://github.com/rails/rails/pull/8489.patch"
    },
    "body": "Previously, url helpers in integration tests ignored RAILS_RELATIVE_URL_ROOT, so\r\neven though the app worked, test code would not use the relative_url_root\r\nin url helpers.\r\n\r\n_Before:_\r\nwhen running a test like this:\r\n        `$ RAILS_RELATIVE_URL_ROOT='/context' rake test`\r\n\r\ntests with code like this:\r\n        `assert_equal \"http://relfoo.com/context/foo\", rel_foos_url`\r\n\r\nwould fail like this:\r\n        `<\"http://relbar.com/context/foo\"> expected but was <\"http://relbar.com/foo\">.`\r\n\r\n_After:_\r\n    Tests pass, yay! :-)"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8480",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8480/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8480/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8480/events",
    "html_url": "https://github.com/rails/rails/issues/8480",
    "id": 9163667,
    "number": 8480,
    "title": "Url Helpers in integration tests don't respect RAILS_RELATIVE_URL_ROOT",
    "user": {
      "login": "dugsmith",
      "id": 3262,
      "avatar_url": "https://secure.gravatar.com/avatar/e23f8b41a875eccbc39c52be3a444463?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "e23f8b41a875eccbc39c52be3a444463",
      "url": "https://api.github.com/users/dugsmith",
      "html_url": "https://github.com/dugsmith",
      "followers_url": "https://api.github.com/users/dugsmith/followers",
      "following_url": "https://api.github.com/users/dugsmith/following",
      "gists_url": "https://api.github.com/users/dugsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dugsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dugsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/dugsmith/orgs",
      "repos_url": "https://api.github.com/users/dugsmith/repos",
      "events_url": "https://api.github.com/users/dugsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dugsmith/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2012-12-10T23:37:27Z",
    "updated_at": "2012-12-10T23:37:27Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "When running integration tests like this:\n\n    $ RAILS_RELATIVE_URL_ROOT='/myapp' rspec spec/requests\n\nURL helpers used in tests to navigate or confirm correct urls ignore RAILS_RELATIVE_URL_ROOT. I discussed this at #5122 [here](https://github.com/rails/rails/issues/5122#issuecomment-10536050) and [here](https://github.com/rails/rails/issues/5122#issuecomment-11223475). This testing issue is a subset of the other issues raised there. I will be submitting a tested pull request for this issue."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8479",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8479/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8479/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8479/events",
    "html_url": "https://github.com/rails/rails/issues/8479",
    "id": 9150196,
    "number": 8479,
    "title": "Fix #7127. Don't call after_* callbacks when around_* callbacks returns false.",
    "user": {
      "login": "kennyj",
      "id": 13426,
      "avatar_url": "https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "1f0b221851379759360d7130dabdfa53",
      "url": "https://api.github.com/users/kennyj",
      "html_url": "https://github.com/kennyj",
      "followers_url": "https://api.github.com/users/kennyj/followers",
      "following_url": "https://api.github.com/users/kennyj/following",
      "gists_url": "https://api.github.com/users/kennyj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kennyj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kennyj/subscriptions",
      "organizations_url": "https://api.github.com/users/kennyj/orgs",
      "repos_url": "https://api.github.com/users/kennyj/repos",
      "events_url": "https://api.github.com/users/kennyj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kennyj/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
        "name": "activemodel",
        "color": "00E5FF"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2012-12-10T16:52:39Z",
    "updated_at": "2012-12-11T16:54:12Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8479",
      "diff_url": "https://github.com/rails/rails/pull/8479.diff",
      "patch_url": "https://github.com/rails/rails/pull/8479.patch"
    },
    "body": "Please see #7127.\r\n\r\nAccording to https://github.com/rails/rails/blob/master/activesupport/lib/active_support/callbacks.rb#L173-L179 and https://github.com/rails/rails/blob/master/activesupport/lib/active_support/callbacks.rb#L320, if we don't call a block, `value` is not assigned  (nil) . \r\n\r\nThus I guess we call after_* callbacks incorrectly in the case."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8470",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8470/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8470/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8470/events",
    "html_url": "https://github.com/rails/rails/issues/8470",
    "id": 9123835,
    "number": 8470,
    "title": "improve has_many destroy dependency memory efficiency",
    "user": {
      "login": "dpickett",
      "id": 1082,
      "avatar_url": "https://secure.gravatar.com/avatar/ae619e02984c5efc3d3e6f9fef39079c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "ae619e02984c5efc3d3e6f9fef39079c",
      "url": "https://api.github.com/users/dpickett",
      "html_url": "https://github.com/dpickett",
      "followers_url": "https://api.github.com/users/dpickett/followers",
      "following_url": "https://api.github.com/users/dpickett/following",
      "gists_url": "https://api.github.com/users/dpickett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpickett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpickett/subscriptions",
      "organizations_url": "https://api.github.com/users/dpickett/orgs",
      "repos_url": "https://api.github.com/users/dpickett/repos",
      "events_url": "https://api.github.com/users/dpickett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpickett/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 11,
    "created_at": "2012-12-09T20:14:33Z",
    "updated_at": "2013-03-22T12:12:50Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8470",
      "diff_url": "https://github.com/rails/rails/pull/8470.diff",
      "patch_url": "https://github.com/rails/rails/pull/8470.patch"
    },
    "body": "utilize find_in_batches so large collections are loaded in segments to avoid hitting memory limits with large collections.\n\nI have a client with a large, multitenant system on heroku where they are often purging tenants. With destroy dependencies properly set, destroying records with large quantities of associated data results in the application exceeding heroku memory constraints."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8464",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8464/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8464/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8464/events",
    "html_url": "https://github.com/rails/rails/issues/8464",
    "id": 9109436,
    "number": 8464,
    "title": "update_attribute, update_column and update_columns should update readonly attributes",
    "user": {
      "login": "VadimPushtaev",
      "id": 1263643,
      "avatar_url": "https://secure.gravatar.com/avatar/7c9fbc08343c7fbfc9c5888d8e803e05?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "7c9fbc08343c7fbfc9c5888d8e803e05",
      "url": "https://api.github.com/users/VadimPushtaev",
      "html_url": "https://github.com/VadimPushtaev",
      "followers_url": "https://api.github.com/users/VadimPushtaev/followers",
      "following_url": "https://api.github.com/users/VadimPushtaev/following",
      "gists_url": "https://api.github.com/users/VadimPushtaev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VadimPushtaev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VadimPushtaev/subscriptions",
      "organizations_url": "https://api.github.com/users/VadimPushtaev/orgs",
      "repos_url": "https://api.github.com/users/VadimPushtaev/repos",
      "events_url": "https://api.github.com/users/VadimPushtaev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VadimPushtaev/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2012-12-08T09:19:27Z",
    "updated_at": "2013-04-17T10:41:16Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8464",
      "diff_url": "https://github.com/rails/rails/pull/8464.diff",
      "patch_url": "https://github.com/rails/rails/pull/8464.patch"
    },
    "body": "*This is a new version of broken #7688*\n\nIt was decided two year ago in c96a505391 that \"update_attribute should not update readonly attributes\". I believe it's missleading and should be changed.\n\nI wrote an issue asking whether it's normal or not: rails/rails/issues/7679. As you can see, it was recommended to me to try sending pull request.\n\nReasons I believe `update_attribute`, `update_column` and `update_columns` should update readonly attributes:\n\n 1. All validations are skipped in this methods. Readonly check really looks like validation.\n 2. `update_attribute` is kind of more 'raw' version of `=` operator, but in this case I can do\n\n ```ruby\n minivan.color = 'new_color'\n minivan.save\n ```\n\n without getting exceptions, but can't do\n\n ```ruby\n minivan.update_attribute :color, 'new_color'\n ```\n\n It's pretty weird, in this case `=` behaves more raw than `update_attribute`.\n\n 3. Readonly control is relatively low-level:\n\n ```ruby\n# Filters the primary keys and readonly attributes from the attribute names.\n   def attributes_for_update(attribute_names)\n     attribute_names.select do |name|\n       column_for_attribute(name) && !pk_attribute?(name) && !readonly_attribute?(name)\n     end\n   end\n ```\n And here is one more oddity: we don't raise exception for `pk_attribute`, but do for `readonly_attribute` in `update_attribute`, `update_column` and `update_columns`.\n\nI'm open for discussion. Please, let me know where I'm wrong :)\n\n  \n\n\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8451",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8451/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8451/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8451/events",
    "html_url": "https://github.com/rails/rails/issues/8451",
    "id": 9091785,
    "number": 8451,
    "title": "small refactoring for routing to improve readability ",
    "user": {
      "login": "mshytikov",
      "id": 545571,
      "avatar_url": "https://secure.gravatar.com/avatar/98cbbc70f871d3452f750cd122f16740?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "98cbbc70f871d3452f750cd122f16740",
      "url": "https://api.github.com/users/mshytikov",
      "html_url": "https://github.com/mshytikov",
      "followers_url": "https://api.github.com/users/mshytikov/followers",
      "following_url": "https://api.github.com/users/mshytikov/following",
      "gists_url": "https://api.github.com/users/mshytikov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mshytikov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mshytikov/subscriptions",
      "organizations_url": "https://api.github.com/users/mshytikov/orgs",
      "repos_url": "https://api.github.com/users/mshytikov/repos",
      "events_url": "https://api.github.com/users/mshytikov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mshytikov/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2012-12-07T15:39:27Z",
    "updated_at": "2013-03-04T20:20:41Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8451",
      "diff_url": "https://github.com/rails/rails/pull/8451.diff",
      "patch_url": "https://github.com/rails/rails/pull/8451.patch"
    },
    "body": "decrease the 'Bloody mess internals' from http://gusiev.com/slides/rails_contribution/static/#40"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8447",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8447/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8447/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8447/events",
    "html_url": "https://github.com/rails/rails/issues/8447",
    "id": 9085067,
    "number": 8447,
    "title": "Don't detect counter_caches by attribute name",
    "user": {
      "login": "matthewrobertson",
      "id": 644493,
      "avatar_url": "https://secure.gravatar.com/avatar/ed63c0c8a39b3d68e0ebd70c6ed3760a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "ed63c0c8a39b3d68e0ebd70c6ed3760a",
      "url": "https://api.github.com/users/matthewrobertson",
      "html_url": "https://github.com/matthewrobertson",
      "followers_url": "https://api.github.com/users/matthewrobertson/followers",
      "following_url": "https://api.github.com/users/matthewrobertson/following",
      "gists_url": "https://api.github.com/users/matthewrobertson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewrobertson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewrobertson/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewrobertson/orgs",
      "repos_url": "https://api.github.com/users/matthewrobertson/repos",
      "events_url": "https://api.github.com/users/matthewrobertson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewrobertson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2012-12-07T11:21:57Z",
    "updated_at": "2013-04-24T23:24:48Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8447",
      "diff_url": "https://github.com/rails/rails/pull/8447.diff",
      "patch_url": "https://github.com/rails/rails/pull/8447.patch"
    },
    "body": "This commit fixes issues ##3903 and #8446 in which false positive detection of counter_cache columns based on column name causes inconsistent behaviour.\r\n\r\nThe approach used here is to query the `belongs_to` side of an association to discover if the `counter_cache` option is set, which is the only documented way to create cached counters"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8446",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8446/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8446/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8446/events",
    "html_url": "https://github.com/rails/rails/issues/8446",
    "id": 9084552,
    "number": 8446,
    "title": "Detecting counter cache columns where there aren't any",
    "user": {
      "login": "matthewrobertson",
      "id": 644493,
      "avatar_url": "https://secure.gravatar.com/avatar/ed63c0c8a39b3d68e0ebd70c6ed3760a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "ed63c0c8a39b3d68e0ebd70c6ed3760a",
      "url": "https://api.github.com/users/matthewrobertson",
      "html_url": "https://github.com/matthewrobertson",
      "followers_url": "https://api.github.com/users/matthewrobertson/followers",
      "following_url": "https://api.github.com/users/matthewrobertson/following",
      "gists_url": "https://api.github.com/users/matthewrobertson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewrobertson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewrobertson/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewrobertson/orgs",
      "repos_url": "https://api.github.com/users/matthewrobertson/repos",
      "events_url": "https://api.github.com/users/matthewrobertson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewrobertson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2012-12-07T10:56:54Z",
    "updated_at": "2013-04-12T05:47:58Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Currently there is a bug in `has_many` relationships that leads to columns being treated like a counter cache inconsistently. The offending code is in the [`has_cached_counter?`](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/associations/has_many_association.rb#L74_) method. This method will return `true` if there is an attribute on the model with a name matching `#{association_name}_count` regardless of whether or not the the `counter_cache` option has been set on the `belongs_to` end of the association.\n\nI have created a [sample app with some tests](https://github.com/matthewrobertson/false-positive-counter-cache-demo/blob/master/test/models/post_test.rb) that demonstrate the problem. All the tests in this file should pass but the last two fail."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8442",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8442/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8442/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8442/events",
    "html_url": "https://github.com/rails/rails/issues/8442",
    "id": 9072840,
    "number": 8442,
    "title": "Memory leak in ActiveSupport::DescendantsTracker.clear",
    "user": {
      "login": "igagnidz",
      "id": 289754,
      "avatar_url": "https://secure.gravatar.com/avatar/f51ec049afbab6feac78771488d91300?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "f51ec049afbab6feac78771488d91300",
      "url": "https://api.github.com/users/igagnidz",
      "html_url": "https://github.com/igagnidz",
      "followers_url": "https://api.github.com/users/igagnidz/followers",
      "following_url": "https://api.github.com/users/igagnidz/following",
      "gists_url": "https://api.github.com/users/igagnidz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igagnidz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igagnidz/subscriptions",
      "organizations_url": "https://api.github.com/users/igagnidz/orgs",
      "repos_url": "https://api.github.com/users/igagnidz/repos",
      "events_url": "https://api.github.com/users/igagnidz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igagnidz/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2012-12-06T23:36:01Z",
    "updated_at": "2012-12-09T23:40:30Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "line activesupport / lib / active_support / descendants_tracker.rb:21 will cause memory leak when klass is not autoloaded and is a singleton_class.\n\nIn my application, I have a gem that dynamically adds callbacks to my Blog model according to data it holds. I am using class_eval that adds callbacks to singleton_class of my Blog model class. \n\nI ran couple tests and it looks like @@direct_descendants is holding on to the reference of the singleton classes that are created every time i create a new Blog instance and prevents GC from clearing them out of memory.\n\nI changed line 21 to this:  \n```ruby\nif ActiveSupport::Dependencies.autoloaded?(klass) || klass.send(:singleton_class?)\n```\nand now GC can clean out my Blog instances from memory. \n\nThank you"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8425",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8425/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8425/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8425/events",
    "html_url": "https://github.com/rails/rails/issues/8425",
    "id": 9024287,
    "number": 8425,
    "title": "Enable Exception Fallback/Failsafe Behavior",
    "user": {
      "login": "schneems",
      "id": 59744,
      "avatar_url": "https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "db953d125f5cc49756edb6149f1b813e",
      "url": "https://api.github.com/users/schneems",
      "html_url": "https://github.com/schneems",
      "followers_url": "https://api.github.com/users/schneems/followers",
      "following_url": "https://api.github.com/users/schneems/following",
      "gists_url": "https://api.github.com/users/schneems/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/schneems/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/schneems/subscriptions",
      "organizations_url": "https://api.github.com/users/schneems/orgs",
      "repos_url": "https://api.github.com/users/schneems/repos",
      "events_url": "https://api.github.com/users/schneems/events{/privacy}",
      "received_events_url": "https://api.github.com/users/schneems/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/railties",
        "name": "railties",
        "color": "8BE06E"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2012-12-05T16:22:07Z",
    "updated_at": "2013-03-13T12:24:29Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8425",
      "diff_url": "https://github.com/rails/rails/pull/8425.diff",
      "patch_url": "https://github.com/rails/rails/pull/8425.patch"
    },
    "body": "Right now we have a default error handling app `ActionDispatch::PublicExceptions` that renders the static 404 & 500 pages. If you don't like it you can override this behavior by specifying an exceptions app in the config of your application using `config.exceptions_app`. Right now if you do so, and you have an exception in your exceptions app, your users will not see your 404 or 500 pages, but instead a FAILSAFE_RESPONSE that simply renders some text.\n\nThis change gives the ability to have MULTIPLE fallback apps. So anyone can write exception handling apps, and if those apps fail, it will continue to try to use the public app. This design also allows the developer to specify additional apps if they choose.\n\nThere are two key things in this PR, first that this fallback behavior to the public exceptions app is automatic, and second that by default you can specify multiple error rendering apps.\n\nThis is an alternative implementation of an existing PR #7804 made at the behest of @jeremy. I believe this is a cleaner implementation.\n\nATP railties and actionpack cc/ @rafael @rafaelfranca @spastorino @steveklabnik"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8419",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8419/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8419/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8419/events",
    "html_url": "https://github.com/rails/rails/issues/8419",
    "id": 9006446,
    "number": 8419,
    "title": "Refactor css_select: shorter and more readable",
    "user": {
      "login": "claudiob",
      "id": 10076,
      "avatar_url": "https://secure.gravatar.com/avatar/4dea5cf83d2d6c1228750b76e579b38d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "4dea5cf83d2d6c1228750b76e579b38d",
      "url": "https://api.github.com/users/claudiob",
      "html_url": "https://github.com/claudiob",
      "followers_url": "https://api.github.com/users/claudiob/followers",
      "following_url": "https://api.github.com/users/claudiob/following",
      "gists_url": "https://api.github.com/users/claudiob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/claudiob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/claudiob/subscriptions",
      "organizations_url": "https://api.github.com/users/claudiob/orgs",
      "repos_url": "https://api.github.com/users/claudiob/repos",
      "events_url": "https://api.github.com/users/claudiob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/claudiob/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2012-12-05T02:14:14Z",
    "updated_at": "2013-04-04T23:46:44Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8419",
      "diff_url": "https://github.com/rails/rails/pull/8419.diff",
      "patch_url": "https://github.com/rails/rails/pull/8419.patch"
    },
    "body": "According to the documentation, `css_select` can only accept either\none or two arguments.\n\nIn the first case, the argument is always a string.\nFor instance: `css_select(\"div\")`\n\nIn the second case, the last argument is always a string.\nFor instance, `css_select(form, \"input\")`\n\nTherefore, the code can be simplified to take care of these cases\nonly, maintaining the specs as they are."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8377",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8377/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8377/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8377/events",
    "html_url": "https://github.com/rails/rails/issues/8377",
    "id": 8832480,
    "number": 8377,
    "title": "Debug TZInfo zones in time_zone_options_for_select",
    "user": {
      "login": "wonnage",
      "id": 125177,
      "avatar_url": "https://secure.gravatar.com/avatar/07b2f492576e74e01dbe801cec562074?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "07b2f492576e74e01dbe801cec562074",
      "url": "https://api.github.com/users/wonnage",
      "html_url": "https://github.com/wonnage",
      "followers_url": "https://api.github.com/users/wonnage/followers",
      "following_url": "https://api.github.com/users/wonnage/following",
      "gists_url": "https://api.github.com/users/wonnage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wonnage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wonnage/subscriptions",
      "organizations_url": "https://api.github.com/users/wonnage/orgs",
      "repos_url": "https://api.github.com/users/wonnage/repos",
      "events_url": "https://api.github.com/users/wonnage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wonnage/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionview",
        "name": "actionview",
        "color": "d7e102"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2012-11-29T22:28:25Z",
    "updated_at": "2013-04-22T16:32:30Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8377",
      "diff_url": "https://github.com/rails/rails/pull/8377.diff",
      "patch_url": "https://github.com/rails/rails/pull/8377.patch"
    },
    "body": "Fixes issue #7245\n\ntime_zone_options_for_select only generates option tags for Rails zone\nidentifiers. TZInfo identifiers were getting ignored invisibly, if passed as\nthe +selected+ arg.\n\nThis change generates option tags for all identifiers recognized\nby ActiveSupport::TimeZone, so TZInfo identifiers can be preselected too."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8345",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8345/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8345/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8345/events",
    "html_url": "https://github.com/rails/rails/issues/8345",
    "id": 8762165,
    "number": 8345,
    "title": "Use of touch, update_all and other \"straight to db\" methods handling in new instances",
    "user": {
      "login": "TiagoCardoso1983",
      "id": 215707,
      "avatar_url": "https://secure.gravatar.com/avatar/92db31ff036a0b365b88536674cb9352?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "92db31ff036a0b365b88536674cb9352",
      "url": "https://api.github.com/users/TiagoCardoso1983",
      "html_url": "https://github.com/TiagoCardoso1983",
      "followers_url": "https://api.github.com/users/TiagoCardoso1983/followers",
      "following_url": "https://api.github.com/users/TiagoCardoso1983/following",
      "gists_url": "https://api.github.com/users/TiagoCardoso1983/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TiagoCardoso1983/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TiagoCardoso1983/subscriptions",
      "organizations_url": "https://api.github.com/users/TiagoCardoso1983/orgs",
      "repos_url": "https://api.github.com/users/TiagoCardoso1983/repos",
      "events_url": "https://api.github.com/users/TiagoCardoso1983/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TiagoCardoso1983/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2012-11-28T11:51:51Z",
    "updated_at": "2012-11-28T15:11:44Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "I've noticed that the call of methods that trigger DB statements is not handled at all for new records. Consider class Ball which is timestamped:\n\n```ruby\nball = Ball.new\nball.touch :updated_at\n```\n\nThis thingy triggers a DB statement, which looks like this:\n\n```sql\nUPDATE `balls` SET `updated_at` = '2012-11-28 12:46:32' WHERE `balls`.`id` IS NULL\n```\n\nand is just useless, because if a record is not persisted yet, it should not trigger such related statements. Another example (consider a ball has many owners which are timestamped):\n\n\n```ruby\nBall.new.owners.update_all :updated_at => Time.now\n```\n\nResulting DB statement:\n\n```sql\nUPDATE `owners` SET `updated_at` = '2012-11-28 12:49:07' WHERE `owners`.`ball_id` IS NULL\n```\n\nagain another useless DB call. \n\nI ask myself how many of these functions exist and are not being filtered. I know update_column is (it throws an exception in such cases). Question here is also how the record should respond by such cases: should it just silently ignore or throw exceptions? You be the judge. "
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8343",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8343/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8343/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8343/events",
    "html_url": "https://github.com/rails/rails/issues/8343",
    "id": 8742501,
    "number": 8343,
    "title": "Add Touch method to ActiveRelation",
    "user": {
      "login": "duggieawesome",
      "id": 1206678,
      "avatar_url": "https://secure.gravatar.com/avatar/488385bd476cceecbf2599857d0830ff?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "488385bd476cceecbf2599857d0830ff",
      "url": "https://api.github.com/users/duggieawesome",
      "html_url": "https://github.com/duggieawesome",
      "followers_url": "https://api.github.com/users/duggieawesome/followers",
      "following_url": "https://api.github.com/users/duggieawesome/following",
      "gists_url": "https://api.github.com/users/duggieawesome/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duggieawesome/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duggieawesome/subscriptions",
      "organizations_url": "https://api.github.com/users/duggieawesome/orgs",
      "repos_url": "https://api.github.com/users/duggieawesome/repos",
      "events_url": "https://api.github.com/users/duggieawesome/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duggieawesome/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 10,
    "created_at": "2012-11-27T23:29:13Z",
    "updated_at": "2013-03-15T17:45:17Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/8343",
      "diff_url": "https://github.com/rails/rails/pull/8343.diff",
      "patch_url": "https://github.com/rails/rails/pull/8343.patch"
    },
    "body": "This allows for more efficient touching of many records"
  }
]
