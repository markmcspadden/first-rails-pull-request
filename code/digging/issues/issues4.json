[
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9894",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9894/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9894/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9894/events",
    "html_url": "https://github.com/rails/rails/issues/9894",
    "id": 12368417,
    "number": 9894,
    "title": "ActiveRecord.where(hash).create callbacks inherit the where(hash)",
    "user": {
      "login": "brocktimus",
      "id": 2103728,
      "avatar_url": "https://secure.gravatar.com/avatar/74b1ddc396432d402f2e6e5c993bf8d3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "74b1ddc396432d402f2e6e5c993bf8d3",
      "url": "https://api.github.com/users/brocktimus",
      "html_url": "https://github.com/brocktimus",
      "followers_url": "https://api.github.com/users/brocktimus/followers",
      "following_url": "https://api.github.com/users/brocktimus/following",
      "gists_url": "https://api.github.com/users/brocktimus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brocktimus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brocktimus/subscriptions",
      "organizations_url": "https://api.github.com/users/brocktimus/orgs",
      "repos_url": "https://api.github.com/users/brocktimus/repos",
      "events_url": "https://api.github.com/users/brocktimus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brocktimus/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      },
      {
        "url": "https://api.github.com/repos/rails/rails/labels/docs",
        "name": "docs",
        "color": "02d7e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 13,
    "created_at": "2013-03-24T02:13:02Z",
    "updated_at": "2013-04-17T12:39:48Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Running rails 4.0.0-beta1 on ruby 2.0.0-p1.\r\n\r\nIt seems as though when you perform code like the below, the where clauses are inherited by any callbacks it runs.\r\n\r\n```ruby\r\nCategory.where(full_name: 'root/bar').create\r\n```\r\n\r\nThe above exhibits the problem. All of the below function as intended.\r\n\r\n```ruby\r\nCategory.new(full_name: 'root/bar').save\r\nCategory.create(full_name: 'root/bar')\r\nCategory.where(full_name: 'root/bar').new.save\r\n```\r\n\r\nBy debugging on the rails console it reveals:\r\n```ruby\r\n# This is basically running\r\nCategory.where(full_name: 'root/bar').where(full_name: 'root').first\r\n\r\n# When this is expected\r\nCategory.where(full_name: 'root').first\r\n```\r\n\r\nThis also applies to the first_or_create methods. I'm yet to test the find_or_create methods or the rails 3.x series. Should I write this into an active_record test? Any advice as to where to start?\r\n\r\nI've created an example application with this problem here https://github.com/brocktimus/rails_create_differences. Example class used below.\r\n\r\n```ruby\r\nclass Category < ActiveRecord::Base\r\n\r\n  has_many :children, class_name: 'Category', foreign_key: :parent_id\r\n  belongs_to :parent, class_name: 'Category'\r\n\r\n  before_validation :assign_parents, on: :create\r\n\r\n  private\r\n\r\n  def assign_parents\r\n    parts = full_name.split '/'\r\n    self.name = parts.pop\r\n    self.parent = Category.where(full_name: parts.join('/')).first_or_initialize unless parts.empty?\r\n  end\r\n\r\nend\r\n```"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9893",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9893/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9893/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9893/events",
    "html_url": "https://github.com/rails/rails/issues/9893",
    "id": 12367934,
    "number": 9893,
    "title": "Add a test to assert autosaving associations doesn't overwrite id accessor methods",
    "user": {
      "login": "JonRowe",
      "id": 162976,
      "avatar_url": "https://secure.gravatar.com/avatar/d79fc498d7a5b2ce12180890247476f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "d79fc498d7a5b2ce12180890247476f0",
      "url": "https://api.github.com/users/JonRowe",
      "html_url": "https://github.com/JonRowe",
      "followers_url": "https://api.github.com/users/JonRowe/followers",
      "following_url": "https://api.github.com/users/JonRowe/following",
      "gists_url": "https://api.github.com/users/JonRowe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JonRowe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JonRowe/subscriptions",
      "organizations_url": "https://api.github.com/users/JonRowe/orgs",
      "repos_url": "https://api.github.com/users/JonRowe/repos",
      "events_url": "https://api.github.com/users/JonRowe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JonRowe/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-03-24T01:12:11Z",
    "updated_at": "2013-03-24T01:12:11Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9893",
      "diff_url": "https://github.com/rails/rails/pull/9893.diff",
      "patch_url": "https://github.com/rails/rails/pull/9893.patch"
    },
    "body": "This is a bug on v3.2.13 (reported in #9130 ) where newly created associations will overwrite directly set ids. It seems to be fixed on 3-2-stable but this will help with regressions."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9884",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9884/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9884/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9884/events",
    "html_url": "https://github.com/rails/rails/issues/9884",
    "id": 12354634,
    "number": 9884,
    "title": "date order for locale/en.yml",
    "user": {
      "login": "kagemusha",
      "id": 26988,
      "avatar_url": "https://secure.gravatar.com/avatar/1046d40347b8cfbdb75d852fbc3e9bec?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "1046d40347b8cfbdb75d852fbc3e9bec",
      "url": "https://api.github.com/users/kagemusha",
      "html_url": "https://github.com/kagemusha",
      "followers_url": "https://api.github.com/users/kagemusha/followers",
      "following_url": "https://api.github.com/users/kagemusha/following",
      "gists_url": "https://api.github.com/users/kagemusha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kagemusha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kagemusha/subscriptions",
      "organizations_url": "https://api.github.com/users/kagemusha/orgs",
      "repos_url": "https://api.github.com/users/kagemusha/repos",
      "events_url": "https://api.github.com/users/kagemusha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kagemusha/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/i18n",
        "name": "i18n",
        "color": "e102d8"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 10,
    "created_at": "2013-03-23T11:01:57Z",
    "updated_at": "2013-03-31T18:25:24Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Is the point of the date: order: element in en.yml to express the usual ordering of dates in a language?  If so and assuming en-US is the default, then shouldn't the date ordering be month,day,year not year,month,day?"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9882",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9882/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9882/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9882/events",
    "html_url": "https://github.com/rails/rails/issues/9882",
    "id": 12354349,
    "number": 9882,
    "title": "Match acronyms greedily in the inflector.",
    "user": {
      "login": "johanlindblad",
      "id": 508113,
      "avatar_url": "https://secure.gravatar.com/avatar/50568985909b212552ac33972fe351e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "50568985909b212552ac33972fe351e0",
      "url": "https://api.github.com/users/johanlindblad",
      "html_url": "https://github.com/johanlindblad",
      "followers_url": "https://api.github.com/users/johanlindblad/followers",
      "following_url": "https://api.github.com/users/johanlindblad/following",
      "gists_url": "https://api.github.com/users/johanlindblad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johanlindblad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johanlindblad/subscriptions",
      "organizations_url": "https://api.github.com/users/johanlindblad/orgs",
      "repos_url": "https://api.github.com/users/johanlindblad/repos",
      "events_url": "https://api.github.com/users/johanlindblad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johanlindblad/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-03-23T10:32:39Z",
    "updated_at": "2013-03-24T05:36:24Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9882",
      "diff_url": "https://github.com/rails/rails/pull/9882.diff",
      "patch_url": "https://github.com/rails/rails/pull/9882.patch"
    },
    "body": "In its current state, the inflector handles acronyms non-intuitively if\r\nthere are acronyms defined that contain other acronyms.\r\n\r\nExamples:\r\n* If you define HTM and HTML as acronyms, 'HTMLController'.underscore produces\r\n  different results depending on the order in which the two acronyms are\r\n  defined - in some cases the result is 'htm_l_controller'.\r\n* 'DNSController'.underscore will return 'd_ns_controller' if DNS and NS\r\n  are defined as an acronym, regardless of the order they are defined.\r\n\r\nThis commit includes tests for both cases and two changes to the\r\ninflector code to handle them. It changes the behaviour so that the\r\nlongest suitable acronym is always used."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9877",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9877/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9877/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9877/events",
    "html_url": "https://github.com/rails/rails/issues/9877",
    "id": 12323875,
    "number": 9877,
    "title": "test case for controller option on scope block in routes file",
    "user": {
      "login": "senny",
      "id": 5402,
      "avatar_url": "https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3d698e2872c07061a455d9e250861235",
      "url": "https://api.github.com/users/senny",
      "html_url": "https://github.com/senny",
      "followers_url": "https://api.github.com/users/senny/followers",
      "following_url": "https://api.github.com/users/senny/following",
      "gists_url": "https://api.github.com/users/senny/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/senny/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/senny/subscriptions",
      "organizations_url": "https://api.github.com/users/senny/orgs",
      "repos_url": "https://api.github.com/users/senny/repos",
      "events_url": "https://api.github.com/users/senny/events{/privacy}",
      "received_events_url": "https://api.github.com/users/senny/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "pixeltrix",
      "id": 6321,
      "avatar_url": "https://secure.gravatar.com/avatar/b14001f2b40640dd6cb63f0e8f1f4869?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "b14001f2b40640dd6cb63f0e8f1f4869",
      "url": "https://api.github.com/users/pixeltrix",
      "html_url": "https://github.com/pixeltrix",
      "followers_url": "https://api.github.com/users/pixeltrix/followers",
      "following_url": "https://api.github.com/users/pixeltrix/following",
      "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
      "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
      "repos_url": "https://api.github.com/users/pixeltrix/repos",
      "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
      "type": "User"
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2013-03-22T15:28:12Z",
    "updated_at": "2013-04-22T20:28:39Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9877",
      "diff_url": "https://github.com/rails/rails/pull/9877.diff",
      "patch_url": "https://github.com/rails/rails/pull/9877.patch"
    },
    "body": "This test-case reproduces #9856 and is currently failing:\r\n\r\n```\r\n  1) Failure:\r\nTestRoutingMapper#test_controller_option_with_nesting_and_leading_slash [test/dispatch/routing_test.rb:1186]:\r\nExpected: \"job#manage_applicant\"\r\n  Actual: \"active#manage_applicant\"\r\n```"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9865",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9865/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9865/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9865/events",
    "html_url": "https://github.com/rails/rails/issues/9865",
    "id": 12308729,
    "number": 9865,
    "title": "after_filter callback's :if procs should not executed when filter_chain is halted by render",
    "user": {
      "login": "rajofchennai",
      "id": 577834,
      "avatar_url": "https://secure.gravatar.com/avatar/c719fc854d80324131fe4451753bc937?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "c719fc854d80324131fe4451753bc937",
      "url": "https://api.github.com/users/rajofchennai",
      "html_url": "https://github.com/rajofchennai",
      "followers_url": "https://api.github.com/users/rajofchennai/followers",
      "following_url": "https://api.github.com/users/rajofchennai/following",
      "gists_url": "https://api.github.com/users/rajofchennai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajofchennai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajofchennai/subscriptions",
      "organizations_url": "https://api.github.com/users/rajofchennai/orgs",
      "repos_url": "https://api.github.com/users/rajofchennai/repos",
      "events_url": "https://api.github.com/users/rajofchennai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajofchennai/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2013-03-22T07:04:33Z",
    "updated_at": "2013-04-24T02:38:26Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9865",
      "diff_url": "https://github.com/rails/rails/pull/9865.diff",
      "patch_url": "https://github.com/rails/rails/pull/9865.patch"
    },
    "body": "This issue seems to be not present in master. This case is handled for multiple before_filters\r\n\r\nFix for issue\r\n\r\nhttps://github.com/rails/rails/issues/9848"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9860",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9860/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9860/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9860/events",
    "html_url": "https://github.com/rails/rails/issues/9860",
    "id": 12295679,
    "number": 9860,
    "title": "Raising an error when nil is passed to update_attributes.",
    "user": {
      "login": "wangjohn",
      "id": 1075780,
      "avatar_url": "https://secure.gravatar.com/avatar/ddbca6015f428461aa5ed3b5f0fb74ab?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "ddbca6015f428461aa5ed3b5f0fb74ab",
      "url": "https://api.github.com/users/wangjohn",
      "html_url": "https://github.com/wangjohn",
      "followers_url": "https://api.github.com/users/wangjohn/followers",
      "following_url": "https://api.github.com/users/wangjohn/following",
      "gists_url": "https://api.github.com/users/wangjohn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wangjohn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wangjohn/subscriptions",
      "organizations_url": "https://api.github.com/users/wangjohn/orgs",
      "repos_url": "https://api.github.com/users/wangjohn/repos",
      "events_url": "https://api.github.com/users/wangjohn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wangjohn/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2013-03-21T21:20:08Z",
    "updated_at": "2013-04-12T15:10:40Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9860",
      "diff_url": "https://github.com/rails/rails/pull/9860.diff",
      "patch_url": "https://github.com/rails/rails/pull/9860.patch"
    },
    "body": "In https://github.com/rails/rails/commit/9e4b715d790aa84dfb3d7aa332e0012cbc264394, @josevalim allowed the ability to send a nil argument to ``update_attributes`` (in response to #478). However, the reasoning behind that was because a pretty cryptic error was thrown. The current behavior in Rails is that ``thing.update_attributes(nil)`` will return and not update any attributes without throwing any error.\r\n\r\nHowever, Instead of allowing you to send a nil argument, it might be better to raise an ``ArgumentError`` which has a clear error message. I've made that change here, but this PR is more intended as a discussion on which behavior is better.\r\n\r\nThis is in response to https://github.com/rails/rails/issues/9858."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9858",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9858/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9858/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9858/events",
    "html_url": "https://github.com/rails/rails/issues/9858",
    "id": 12289001,
    "number": 9858,
    "title": "update_attributes shouldn't accept nil as a valid argument",
    "user": {
      "login": "mdedetrich",
      "id": 2337269,
      "avatar_url": "https://secure.gravatar.com/avatar/54b21bb265435cde76cc295bfcae2570?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "54b21bb265435cde76cc295bfcae2570",
      "url": "https://api.github.com/users/mdedetrich",
      "html_url": "https://github.com/mdedetrich",
      "followers_url": "https://api.github.com/users/mdedetrich/followers",
      "following_url": "https://api.github.com/users/mdedetrich/following",
      "gists_url": "https://api.github.com/users/mdedetrich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdedetrich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdedetrich/subscriptions",
      "organizations_url": "https://api.github.com/users/mdedetrich/orgs",
      "repos_url": "https://api.github.com/users/mdedetrich/repos",
      "events_url": "https://api.github.com/users/mdedetrich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdedetrich/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2013-03-21T18:43:07Z",
    "updated_at": "2013-03-21T21:44:20Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "This issue came along due to a simple typo in params\r\n\r\n```ruby\r\ndef update\r\n    @financial_infos = FinancialInfo.find(params[:id])\r\n \r\n    respond_to do |format|\r\n      if @financial_infos.update_attributes(params[:financial_infos])\r\n        format.json { head :no_content }\r\n      else\r\n        format.json { render json: @financial_infos.errors, status: :unprocessable_entity }\r\n      end\r\n    end\r\n  end\r\n```\r\n\r\nThere was a typo in the ``` :financial_info``` symbol inside the params. As a result, the ```params[:financial_infos]``` expression was nil, and hence nil was being passed into update_attributes. The issue is no error was ever thrown, update_attributes just updated (nothing) and it proceeded to \"work\"\r\n\r\nupdate_attributes should throw an error if nil is being passed as an argument (if you want to update nothing, it should either be an empty hash, or a hash with all the keys/values the same). Although it can be argued you should detect for nil, the above code is the default code made from the RoR scaffolder"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9857",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9857/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9857/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9857/events",
    "html_url": "https://github.com/rails/rails/issues/9857",
    "id": 12288301,
    "number": 9857,
    "title": "failure to parse params should trigger a 400 Bad Request",
    "user": {
      "login": "yyyc514",
      "id": 6473,
      "avatar_url": "https://secure.gravatar.com/avatar/fab2e0c720d6e979a551782631dca58e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "fab2e0c720d6e979a551782631dca58e",
      "url": "https://api.github.com/users/yyyc514",
      "html_url": "https://github.com/yyyc514",
      "followers_url": "https://api.github.com/users/yyyc514/followers",
      "following_url": "https://api.github.com/users/yyyc514/following",
      "gists_url": "https://api.github.com/users/yyyc514/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yyyc514/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yyyc514/subscriptions",
      "organizations_url": "https://api.github.com/users/yyyc514/orgs",
      "repos_url": "https://api.github.com/users/yyyc514/repos",
      "events_url": "https://api.github.com/users/yyyc514/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yyyc514/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-21T18:27:00Z",
    "updated_at": "2013-03-22T08:47:10Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9857",
      "diff_url": "https://github.com/rails/rails/pull/9857.diff",
      "patch_url": "https://github.com/rails/rails/pull/9857.patch"
    },
    "body": "Ref: https://github.com/rails/rails/pull/7444\r\n\r\nSomeone should not be able to get the server to arbitrarily 500 by passing a simple invalid JSON or XML string.  This creates an easy DOS attack against some load balancers just by hitting up and app over and over with invalid requests... you can pull the entire app offline... a more appropriate response code would be 400 - \"The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.\".\r\n\r\nThis commit makes this change."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9856",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9856/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9856/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9856/events",
    "html_url": "https://github.com/rails/rails/issues/9856",
    "id": 12287532,
    "number": 9856,
    "title": "Setting controller on scope block in routes file - regression in 3.2.13",
    "user": {
      "login": "dvandersluis",
      "id": 57964,
      "avatar_url": "https://secure.gravatar.com/avatar/825adc1be578338807e9bf0276311396?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "825adc1be578338807e9bf0276311396",
      "url": "https://api.github.com/users/dvandersluis",
      "html_url": "https://github.com/dvandersluis",
      "followers_url": "https://api.github.com/users/dvandersluis/followers",
      "following_url": "https://api.github.com/users/dvandersluis/following",
      "gists_url": "https://api.github.com/users/dvandersluis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dvandersluis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dvandersluis/subscriptions",
      "organizations_url": "https://api.github.com/users/dvandersluis/orgs",
      "repos_url": "https://api.github.com/users/dvandersluis/repos",
      "events_url": "https://api.github.com/users/dvandersluis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dvandersluis/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/regression",
        "name": "regression",
        "color": "e10c02"
      },
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "pixeltrix",
      "id": 6321,
      "avatar_url": "https://secure.gravatar.com/avatar/b14001f2b40640dd6cb63f0e8f1f4869?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "b14001f2b40640dd6cb63f0e8f1f4869",
      "url": "https://api.github.com/users/pixeltrix",
      "html_url": "https://github.com/pixeltrix",
      "followers_url": "https://api.github.com/users/pixeltrix/followers",
      "following_url": "https://api.github.com/users/pixeltrix/following",
      "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
      "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
      "repos_url": "https://api.github.com/users/pixeltrix/repos",
      "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
      "type": "User"
    },
    "milestone": null,
    "comments": 2,
    "created_at": "2013-03-21T18:09:59Z",
    "updated_at": "2013-04-22T20:28:30Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "I'm not sure if this is the same issue as #9697 or not, but my nested `scope` routes don't work anymore in 3.2.13 (but they do in 3.2.12):\r\n\r\n```ruby\r\nscope '/job', :controller => :job do\r\n  scope '/:id', :action => :manage_applicant, :as => \"job_manage_applicant\", :constraints => { :id => /\\d+/ } do\r\n    get '/deselected', :active_tab => 0\r\n    get '/active', :active_tab => 1\r\n    get '/hired', :active_tab => 2\r\n    get '', :active_tab => 1\r\n  end\r\nend\r\n```\r\n\r\nIn 3.2.12, `rake routes` returns:\r\n\r\n```\r\njob_manage_applicant_deselected GET    /job/:id/deselected(.:format)    job#manage_applicant {:subdomain=>\"clients\", :id=>/\\d+/, :active_tab=>0}\r\n    job_manage_applicant_active GET    /job/:id/active(.:format)        job#manage_applicant {:subdomain=>\"clients\", :id=>/\\d+/, :active_tab=>1}\r\n     job_manage_applicant_hired GET    /job/:id/hired(.:format)         job#manage_applicant {:subdomain=>\"clients\", :id=>/\\d+/, :active_tab=>2}\r\n           job_manage_applicant GET    /job/:id(.:format)               job#manage_applicant {:subdomain=>\"clients\", :id=>/\\d+/, :active_tab=>1}\r\n```\r\n\r\nHowever, in 3.2.13:\r\n\r\n```\r\njob_manage_applicant_deselected GET    /job/:id/deselected(.:format)    deselected#manage_applicant {:subdomain=>\"clients\", :id=>/\\d+/, :active_tab=>0}\r\n    job_manage_applicant_active GET    /job/:id/active(.:format)        active#manage_applicant {:subdomain=>\"clients\", :id=>/\\d+/, :active_tab=>1}\r\n     job_manage_applicant_hired GET    /job/:id/hired(.:format)         hired#manage_applicant {:subdomain=>\"clients\", :id=>/\\d+/, :active_tab=>2}\r\n           job_manage_applicant GET    /job/:id(.:format)               job#manage_applicant {:subdomain=>\"clients\", :id=>/\\d+/, :active_tab=>1}\r\n```\r\n\r\nAnd then I get `ActionController::RoutingError`s about `uninitialized constant ActiveController`, etc.\r\n\r\nThe same behaviour is exhibited even if I put the `controller` option on the inner scope, or even on each specific route. Only this form worked:\r\n\r\n```ruby\r\nscope '/job' do\r\n  scope '/:id', :action => :manage_applicant, :as => \"job_manage_applicant\", :constraints => { :id => /\\d+/ } do\r\n    get '/deselected' => 'job#manage_applicant', :active_tab => 0\r\n    get '/active' => 'job#manage_applicant', :active_tab => 1\r\n    get '/hired' => 'job#manage_applicant', :active_tab => 2\r\n    get '', :active_tab => 1\r\n  end\r\nend\r\n```\r\n\r\nWhich, of course, is not very DRY."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9848",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9848/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9848/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9848/events",
    "html_url": "https://github.com/rails/rails/issues/9848",
    "id": 12266547,
    "number": 9848,
    "title": "after_filter callbacks :if procs getting executed even when filter chain is halted by render in before_filter",
    "user": {
      "login": "rajofchennai",
      "id": 577834,
      "avatar_url": "https://secure.gravatar.com/avatar/c719fc854d80324131fe4451753bc937?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "c719fc854d80324131fe4451753bc937",
      "url": "https://api.github.com/users/rajofchennai",
      "html_url": "https://github.com/rajofchennai",
      "followers_url": "https://api.github.com/users/rajofchennai/followers",
      "following_url": "https://api.github.com/users/rajofchennai/following",
      "gists_url": "https://api.github.com/users/rajofchennai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajofchennai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajofchennai/subscriptions",
      "organizations_url": "https://api.github.com/users/rajofchennai/orgs",
      "repos_url": "https://api.github.com/users/rajofchennai/repos",
      "events_url": "https://api.github.com/users/rajofchennai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajofchennai/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      },
      {
        "url": "https://api.github.com/repos/rails/rails/labels/3-2-stable",
        "name": "3-2-stable",
        "color": "02d7e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-03-21T09:43:33Z",
    "updated_at": "2013-03-21T09:45:03Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Hi\r\n\r\nI am using rails 3.2.13. \r\n\r\nbefore_filter :render_something\r\nafter_filter :some_method , :if => Proc.new{|c| @variable_in_controller.count }\r\n\r\nEven though the before_filter is rendering, This does not stop execution of the :if Proc in :after_callback. Even though the \"some_method\" is not actually executed.\r\n\r\nI came across a similar issue in one of the older rails, They say it is not happening on 3.2 but still I am facing the same issue. https://github.com/rails/rails/pull/4440\r\n\r\nRegards,\r\nRajesh"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9846",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9846/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9846/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9846/events",
    "html_url": "https://github.com/rails/rails/issues/9846",
    "id": 12255402,
    "number": 9846,
    "title": "removed tilde files",
    "user": {
      "login": "zenspider",
      "id": 9832,
      "avatar_url": "https://secure.gravatar.com/avatar/16c4b19d8670085a428787f8b2438223?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "16c4b19d8670085a428787f8b2438223",
      "url": "https://api.github.com/users/zenspider",
      "html_url": "https://github.com/zenspider",
      "followers_url": "https://api.github.com/users/zenspider/followers",
      "following_url": "https://api.github.com/users/zenspider/following",
      "gists_url": "https://api.github.com/users/zenspider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zenspider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zenspider/subscriptions",
      "organizations_url": "https://api.github.com/users/zenspider/orgs",
      "repos_url": "https://api.github.com/users/zenspider/repos",
      "events_url": "https://api.github.com/users/zenspider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zenspider/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/railties",
        "name": "railties",
        "color": "8BE06E"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-21T00:29:56Z",
    "updated_at": "2013-03-21T00:30:24Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9846",
      "diff_url": "https://github.com/rails/rails/pull/9846.diff",
      "patch_url": "https://github.com/rails/rails/pull/9846.patch"
    },
    "body": "yup yup"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9844",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9844/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9844/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9844/events",
    "html_url": "https://github.com/rails/rails/issues/9844",
    "id": 12255268,
    "number": 9844,
    "title": "Moved test:run subtask names to RAILS_TESTS for easy modification",
    "user": {
      "login": "zenspider",
      "id": 9832,
      "avatar_url": "https://secure.gravatar.com/avatar/16c4b19d8670085a428787f8b2438223?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "16c4b19d8670085a428787f8b2438223",
      "url": "https://api.github.com/users/zenspider",
      "html_url": "https://github.com/zenspider",
      "followers_url": "https://api.github.com/users/zenspider/followers",
      "following_url": "https://api.github.com/users/zenspider/following",
      "gists_url": "https://api.github.com/users/zenspider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zenspider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zenspider/subscriptions",
      "organizations_url": "https://api.github.com/users/zenspider/orgs",
      "repos_url": "https://api.github.com/users/zenspider/repos",
      "events_url": "https://api.github.com/users/zenspider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zenspider/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/railties",
        "name": "railties",
        "color": "8BE06E"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2013-03-21T00:24:38Z",
    "updated_at": "2013-03-21T03:25:35Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9844",
      "diff_url": "https://github.com/rails/rails/pull/9844.diff",
      "patch_url": "https://github.com/rails/rails/pull/9844.patch"
    },
    "body": "rawr!\r\n\r\nSee https://github.com/rails/rails/pull/9177#issuecomment-14575192 for background infos.\r\n\r\nReviewed by @tenderlove"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9838",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9838/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9838/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9838/events",
    "html_url": "https://github.com/rails/rails/issues/9838",
    "id": 12247696,
    "number": 9838,
    "title": "Fix improperly configured host in generated urls",
    "user": {
      "login": "schneems",
      "id": 59744,
      "avatar_url": "https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "db953d125f5cc49756edb6149f1b813e",
      "url": "https://api.github.com/users/schneems",
      "html_url": "https://github.com/schneems",
      "followers_url": "https://api.github.com/users/schneems/followers",
      "following_url": "https://api.github.com/users/schneems/following",
      "gists_url": "https://api.github.com/users/schneems/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/schneems/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/schneems/subscriptions",
      "organizations_url": "https://api.github.com/users/schneems/orgs",
      "repos_url": "https://api.github.com/users/schneems/repos",
      "events_url": "https://api.github.com/users/schneems/events{/privacy}",
      "received_events_url": "https://api.github.com/users/schneems/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-03-20T20:49:10Z",
    "updated_at": "2013-03-21T07:30:13Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9838",
      "diff_url": "https://github.com/rails/rails/pull/9838.diff",
      "patch_url": "https://github.com/rails/rails/pull/9838.patch"
    },
    "body": "If the host in `default_url_options` is accidentally set with a protocol such as \r\n\r\n```\r\nhost: \"http://example.com\"\r\n``` \r\n\r\nthen the generated url will have the protocol twice `http://http://example.com` which is not what the user intended. Likely they wanted to define a host `host: \"example.com\"` and a `protocol: \"http://\"` but did not know the convention.\r\n\r\nThis may not the most common problem, but when it happens it can go undetected for a while. I accidentally added `http://` out of habit recently only to find all the links in my emails were broken after deploying a demo site to production. Rather than allow this accident go undetected, we can fix the problem in line by properly setting the protocol and host.\r\n\r\n\r\nI was able to find this related question on stack overflow: http://stackoverflow.com/questions/5878329/rails-3-devise-how-do-i-make-the-email-confirmation-links-use-secure-https-n where the answer was highly upvoted.\r\n\r\nThis is based off of work in #7415 cc/ @pixeltrix\r\n\r\nback port of #9794\r\n\r\nATP Action Mailer and Action Pack"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9835",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9835/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9835/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9835/events",
    "html_url": "https://github.com/rails/rails/issues/9835",
    "id": 12240016,
    "number": 9835,
    "title": "Wrong WHERE clause for array in polymorphic associations",
    "user": {
      "login": "softpro",
      "id": 1022687,
      "avatar_url": "https://secure.gravatar.com/avatar/8bd2d0b465d30721b0eb40c366bf3022?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "8bd2d0b465d30721b0eb40c366bf3022",
      "url": "https://api.github.com/users/softpro",
      "html_url": "https://github.com/softpro",
      "followers_url": "https://api.github.com/users/softpro/followers",
      "following_url": "https://api.github.com/users/softpro/following",
      "gists_url": "https://api.github.com/users/softpro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/softpro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/softpro/subscriptions",
      "organizations_url": "https://api.github.com/users/softpro/orgs",
      "repos_url": "https://api.github.com/users/softpro/repos",
      "events_url": "https://api.github.com/users/softpro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/softpro/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-20T17:57:58Z",
    "updated_at": "2013-04-03T08:02:36Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Get something like this for multiple objects being queried:\r\n```sql\r\n\"table\".\"association_id\" IN (1, 2, 3) AND \"table\".\"association_type\" IN ('ModelA', 'ModelB', 'ModelC')\r\n```\r\n\r\nID & type should be coupled for each element like this:\r\n```sql\r\n(\"table\".\"association_id\" = 1 AND \"table\".\"association_type\" = 'ModelA') OR (\"table\".\"association_id\" = 2 AND \"table\".\"association_type\" = 'ModelB') OR (\"table\".\"association_id\" = 3 AND \"table\".\"association_type\" = 'ModelC')\r\n```\r\n\r\nFor example this happens in `association.clear` when using a polymorphic association in the join model.\r\n\r\nNoticed in Rails 4.0.0.beta1. I haven't looked through the code yet, but it seems to be introduced earlier.\r\n\r\nBTW, this part of `WHERE` seems to be useless in `clear`."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9832",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9832/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9832/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9832/events",
    "html_url": "https://github.com/rails/rails/issues/9832",
    "id": 12229362,
    "number": 9832,
    "title": "issue #9525 is fixed - boolean options default values defined explicitly, incorrect usage of required option replaced with boolean, settings of reused options are not overridden anymore",
    "user": {
      "login": "andriytyurnikov",
      "id": 3668,
      "avatar_url": "https://secure.gravatar.com/avatar/b99c70d85265a280851ec032140c6014?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "b99c70d85265a280851ec032140c6014",
      "url": "https://api.github.com/users/andriytyurnikov",
      "html_url": "https://github.com/andriytyurnikov",
      "followers_url": "https://api.github.com/users/andriytyurnikov/followers",
      "following_url": "https://api.github.com/users/andriytyurnikov/following",
      "gists_url": "https://api.github.com/users/andriytyurnikov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andriytyurnikov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andriytyurnikov/subscriptions",
      "organizations_url": "https://api.github.com/users/andriytyurnikov/orgs",
      "repos_url": "https://api.github.com/users/andriytyurnikov/repos",
      "events_url": "https://api.github.com/users/andriytyurnikov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andriytyurnikov/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/railties",
        "name": "railties",
        "color": "8BE06E"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2013-03-20T14:30:00Z",
    "updated_at": "2013-04-08T13:12:21Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9832",
      "diff_url": "https://github.com/rails/rails/pull/9832.diff",
      "patch_url": "https://github.com/rails/rails/pull/9832.patch"
    },
    "body": "boolean options default values defined explicitly, incorrect usage of required option replaced with boolean, settings of reused options are not overridden anymore'"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9829",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9829/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9829/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9829/events",
    "html_url": "https://github.com/rails/rails/issues/9829",
    "id": 12220259,
    "number": 9829,
    "title": "url_helpers persisting params from current request when combined with defaults",
    "user": {
      "login": "gja",
      "id": 34746,
      "avatar_url": "https://secure.gravatar.com/avatar/9245f8593dc19a394a021ea0f17f9e0f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "9245f8593dc19a394a021ea0f17f9e0f",
      "url": "https://api.github.com/users/gja",
      "html_url": "https://github.com/gja",
      "followers_url": "https://api.github.com/users/gja/followers",
      "following_url": "https://api.github.com/users/gja/following",
      "gists_url": "https://api.github.com/users/gja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gja/subscriptions",
      "organizations_url": "https://api.github.com/users/gja/orgs",
      "repos_url": "https://api.github.com/users/gja/repos",
      "events_url": "https://api.github.com/users/gja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gja/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "pixeltrix",
      "id": 6321,
      "avatar_url": "https://secure.gravatar.com/avatar/b14001f2b40640dd6cb63f0e8f1f4869?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "b14001f2b40640dd6cb63f0e8f1f4869",
      "url": "https://api.github.com/users/pixeltrix",
      "html_url": "https://github.com/pixeltrix",
      "followers_url": "https://api.github.com/users/pixeltrix/followers",
      "following_url": "https://api.github.com/users/pixeltrix/following",
      "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
      "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
      "repos_url": "https://api.github.com/users/pixeltrix/repos",
      "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
      "type": "User"
    },
    "milestone": null,
    "comments": 4,
    "created_at": "2013-03-20T10:22:39Z",
    "updated_at": "2013-03-22T11:35:46Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "URL helpers seem to be keeping options from the current request when building links. This only happens when I use defaults in the routes. This is happening on rails 3.2.12.\r\n\r\nIn the second case, the output i expect is /all_html/foo, not /all_html/foo/booga\r\n\r\n```ruby\r\n# config/routes.rb\r\nDefaultsBug::Application.routes.draw do\r\n  get \"/all/:type(/:category)\" => \"application#index\", :as => :all_products\r\n\r\n  defaults :format => :html do\r\n    get \"/all_html/:type(/:category)\" => \"application#index_html\", :as => :all_html_products\r\n  end\r\nend\r\n```\r\n```ruby \r\n# application_controller.rb\r\nclass ApplicationController < ActionController::Base\r\n  def index\r\n    render :text => all_products_path(\"foo\")\r\n  end\r\n\r\n  def index_html\r\n    render :text => all_html_products_path(\"foo\")\r\n  end\r\nend\r\n```\r\n\r\n```\r\n$ curl http://localhost:3001/all/ooga/booga\r\n/all/foo\r\n$ curl http://localhost:3001/all_html/ooga/booga\r\n/all_html/foo/booga\r\n```"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9828",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9828/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9828/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9828/events",
    "html_url": "https://github.com/rails/rails/issues/9828",
    "id": 12218157,
    "number": 9828,
    "title": "Added test cases for .save vs  .save! bug",
    "user": {
      "login": "vicli",
      "id": 2438986,
      "avatar_url": "https://secure.gravatar.com/avatar/1efd1dc7e39fcf0546cbd7b5462fa2eb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "1efd1dc7e39fcf0546cbd7b5462fa2eb",
      "url": "https://api.github.com/users/vicli",
      "html_url": "https://github.com/vicli",
      "followers_url": "https://api.github.com/users/vicli/followers",
      "following_url": "https://api.github.com/users/vicli/following",
      "gists_url": "https://api.github.com/users/vicli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicli/subscriptions",
      "organizations_url": "https://api.github.com/users/vicli/orgs",
      "repos_url": "https://api.github.com/users/vicli/repos",
      "events_url": "https://api.github.com/users/vicli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicli/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-03-20T09:12:35Z",
    "updated_at": "2013-03-22T08:12:09Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9828",
      "diff_url": "https://github.com/rails/rails/pull/9828.diff",
      "patch_url": "https://github.com/rails/rails/pull/9828.patch"
    },
    "body": "Test cases for issue #4566"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9823",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9823/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9823/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9823/events",
    "html_url": "https://github.com/rails/rails/issues/9823",
    "id": 12214953,
    "number": 9823,
    "title": "Created a test for has_many :through presence validation issue",
    "user": {
      "login": "wangjohn",
      "id": 1075780,
      "avatar_url": "https://secure.gravatar.com/avatar/ddbca6015f428461aa5ed3b5f0fb74ab?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "ddbca6015f428461aa5ed3b5f0fb74ab",
      "url": "https://api.github.com/users/wangjohn",
      "html_url": "https://github.com/wangjohn",
      "followers_url": "https://api.github.com/users/wangjohn/followers",
      "following_url": "https://api.github.com/users/wangjohn/following",
      "gists_url": "https://api.github.com/users/wangjohn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wangjohn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wangjohn/subscriptions",
      "organizations_url": "https://api.github.com/users/wangjohn/orgs",
      "repos_url": "https://api.github.com/users/wangjohn/repos",
      "events_url": "https://api.github.com/users/wangjohn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wangjohn/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-03-20T06:40:03Z",
    "updated_at": "2013-03-20T06:40:03Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9823",
      "diff_url": "https://github.com/rails/rails/pull/9823.diff",
      "patch_url": "https://github.com/rails/rails/pull/9823.patch"
    },
    "body": "This PR creates a test for issue #9209. The test fails in the current master branch."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9814",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9814/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9814/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9814/events",
    "html_url": "https://github.com/rails/rails/issues/9814",
    "id": 12203548,
    "number": 9814,
    "title": "Creating a ChangedFile class for sending file system updates through Notifications",
    "user": {
      "login": "wangjohn",
      "id": 1075780,
      "avatar_url": "https://secure.gravatar.com/avatar/ddbca6015f428461aa5ed3b5f0fb74ab?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "ddbca6015f428461aa5ed3b5f0fb74ab",
      "url": "https://api.github.com/users/wangjohn",
      "html_url": "https://github.com/wangjohn",
      "followers_url": "https://api.github.com/users/wangjohn/followers",
      "following_url": "https://api.github.com/users/wangjohn/following",
      "gists_url": "https://api.github.com/users/wangjohn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wangjohn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wangjohn/subscriptions",
      "organizations_url": "https://api.github.com/users/wangjohn/orgs",
      "repos_url": "https://api.github.com/users/wangjohn/repos",
      "events_url": "https://api.github.com/users/wangjohn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wangjohn/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-03-19T21:42:10Z",
    "updated_at": "2013-03-19T21:42:10Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9814",
      "diff_url": "https://github.com/rails/rails/pull/9814.diff",
      "patch_url": "https://github.com/rails/rails/pull/9814.patch"
    },
    "body": "I'm creating a wrapper to allow the FileUpdateChecker to send out notifications about changes in the file system. \r\n\r\nThe ``ChangedFile`` class allows one to specify a path and a change type. This object can then be passed around with references, or can be converted to a hash so that its information can easily be passed around as payload in the Notifications system.\r\n\r\nThis change paves the way for creating a better FileUpdateChecker (see https://github.com/rails/rails/pull/9259) which will identify which files have been changed and send out a notification using the ``ChangedFile`` class implemented in this PR. However, its a much smaller change than https://github.com/rails/rails/pull/9259 so I'm hoping to incorporate it slowly.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9813",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9813/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9813/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9813/events",
    "html_url": "https://github.com/rails/rails/issues/9813",
    "id": 12203419,
    "number": 9813,
    "title": "default_scope breaks chained scopes in 3.2.13",
    "user": {
      "login": "pivotal-chorus",
      "id": 1163290,
      "avatar_url": "https://secure.gravatar.com/avatar/394288a072247dbe6f48559098c3c7f9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "394288a072247dbe6f48559098c3c7f9",
      "url": "https://api.github.com/users/pivotal-chorus",
      "html_url": "https://github.com/pivotal-chorus",
      "followers_url": "https://api.github.com/users/pivotal-chorus/followers",
      "following_url": "https://api.github.com/users/pivotal-chorus/following",
      "gists_url": "https://api.github.com/users/pivotal-chorus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pivotal-chorus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pivotal-chorus/subscriptions",
      "organizations_url": "https://api.github.com/users/pivotal-chorus/orgs",
      "repos_url": "https://api.github.com/users/pivotal-chorus/repos",
      "events_url": "https://api.github.com/users/pivotal-chorus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pivotal-chorus/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/regression",
        "name": "regression",
        "color": "e10c02"
      },
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      },
      {
        "url": "https://api.github.com/repos/rails/rails/labels/3-2-stable",
        "name": "3-2-stable",
        "color": "02d7e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 12,
    "created_at": "2013-03-19T21:38:40Z",
    "updated_at": "2013-04-25T17:51:51Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "We're trying to upgrade to 3.2.13 from 3.2.12 and encountered a strange bug with chained scopes for ActiveRecord classes that have a default scope.\r\n\r\nUnder 3.2.13, the chained scope `Animal.where(:id => 12345).find(Animal.first.id)` generates the SQL below, which returns the first Animal, while it should not find anything.\r\n`SELECT \"animals\".* FROM \"animals\" WHERE \"animals\".\"alive\" = 't' AND \"animals\".\"id\" = 11 LIMIT 1`\r\n\r\nUnder 3.2.12 it generates the correct SQL:\r\n`SELECT \"animals\".* FROM \"animals\" WHERE \"animals\".\"alive\" = 't' AND \"animals\".\"id\" = 12345 AND \"animals\".\"id\" = 10 LIMIT 1`\r\n\r\n[Gist showing problem](https://gist.github.com/pivotal-chorus/5200366)"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9808",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9808/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9808/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9808/events",
    "html_url": "https://github.com/rails/rails/issues/9808",
    "id": 12190635,
    "number": 9808,
    "title": "ActiveRecord TypeError: can't dup Symbol",
    "user": {
      "login": "DEfusion",
      "id": 117200,
      "avatar_url": "https://secure.gravatar.com/avatar/7544bc8aa7bacb5512774a33684da163?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "7544bc8aa7bacb5512774a33684da163",
      "url": "https://api.github.com/users/DEfusion",
      "html_url": "https://github.com/DEfusion",
      "followers_url": "https://api.github.com/users/DEfusion/followers",
      "following_url": "https://api.github.com/users/DEfusion/following",
      "gists_url": "https://api.github.com/users/DEfusion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DEfusion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DEfusion/subscriptions",
      "organizations_url": "https://api.github.com/users/DEfusion/orgs",
      "repos_url": "https://api.github.com/users/DEfusion/repos",
      "events_url": "https://api.github.com/users/DEfusion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DEfusion/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      },
      {
        "url": "https://api.github.com/repos/rails/rails/labels/needs+feedback",
        "name": "needs feedback",
        "color": "ededed"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-03-19T17:02:48Z",
    "updated_at": "2013-04-09T08:50:20Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Running a query via `select_all` on a custom mysql2 connection is throwing a `TypeError: can't dup Symbol` in `ActiveRecord::Result` line 33.\r\n\r\nThe mysql2 connection is being made via the following:\r\n\r\n    ActiveRecord::Base.mysql2_connection(\r\n        :host => Settings.import_db[:hostname],\r\n        :username => Settings.import_db[:username],\r\n        :password => Settings.import_db[:password],\r\n        :database => Settings.import_db[:database],\r\n        :port => Settings.import_db[:port],\r\n        :reconnect => true\r\n    )\r\n\r\nIssue present in 3.2.13"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9805",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9805/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9805/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9805/events",
    "html_url": "https://github.com/rails/rails/issues/9805",
    "id": 12186566,
    "number": 9805,
    "title": "ArgumentError when trying to use has_many with lambda block within with_options",
    "user": {
      "login": "isabanin",
      "id": 5837,
      "avatar_url": "https://secure.gravatar.com/avatar/af33761bba323dc3421cea0c4c0e20fd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "af33761bba323dc3421cea0c4c0e20fd",
      "url": "https://api.github.com/users/isabanin",
      "html_url": "https://github.com/isabanin",
      "followers_url": "https://api.github.com/users/isabanin/followers",
      "following_url": "https://api.github.com/users/isabanin/following",
      "gists_url": "https://api.github.com/users/isabanin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isabanin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isabanin/subscriptions",
      "organizations_url": "https://api.github.com/users/isabanin/orgs",
      "repos_url": "https://api.github.com/users/isabanin/repos",
      "events_url": "https://api.github.com/users/isabanin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isabanin/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-03-19T15:49:43Z",
    "updated_at": "2013-03-22T07:44:10Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "While using Rails 4.0.0.beta1 on Ruby 2.0.0p0 (2013-02-24 revision 39474) in a freshly generated empty rails app without any plugins or gems, the following code will throw an ArgumentError exception:\r\n\r\n```ruby\r\nclass Idea < ActiveRecord::Base\r\n\r\n  with_options dependent: :destroy do |d|\r\n    d.has_many :posts, -> { order('id ASC') }\r\n  end\r\n\r\nend\r\n```\r\n\r\nThe exception:\r\n\r\nhttps://gist.github.com/isabanin/5197209\r\n\r\nIt looks like ActiveSupport::OptionMerger breaks because of the lambda argument in has_many. The following code works fine:\r\n\r\n```ruby\r\nclass Idea < ActiveRecord::Base\r\n\r\n  has_many :posts, -> { order('id ASC') }, dependent: :destroy\r\n\r\nend\r\n```"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9795",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9795/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9795/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9795/events",
    "html_url": "https://github.com/rails/rails/issues/9795",
    "id": 12169822,
    "number": 9795,
    "title": "assert on render_template failed because of response is string and does not have body method",
    "user": {
      "login": "iambowen",
      "id": 920329,
      "avatar_url": "https://secure.gravatar.com/avatar/6e543163103eafc343ec28699a8239b2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "6e543163103eafc343ec28699a8239b2",
      "url": "https://api.github.com/users/iambowen",
      "html_url": "https://github.com/iambowen",
      "followers_url": "https://api.github.com/users/iambowen/followers",
      "following_url": "https://api.github.com/users/iambowen/following",
      "gists_url": "https://api.github.com/users/iambowen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iambowen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iambowen/subscriptions",
      "organizations_url": "https://api.github.com/users/iambowen/orgs",
      "repos_url": "https://api.github.com/users/iambowen/repos",
      "events_url": "https://api.github.com/users/iambowen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iambowen/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionview",
        "name": "actionview",
        "color": "d7e102"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-19T08:07:06Z",
    "updated_at": "2013-03-26T22:07:47Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "hi, just upgrade to latest rails distribution and found this issue.\r\n\r\nI am testing template that rendering another partial in haml test file, and the test is like this:\r\n\r\nrender \r\nrendered.should render_template('template_name')\r\n\r\nThen I will caught in an error complains that \"response does not have method body\" . It turns out that the assert_template method in test_case.rb file under actionpack/lib add a new line  calling the body method of response.\r\n\r\n//Force body to be read in case the template is being streamed\r\nresponse.boy\r\n\r\nI finally give up use this way to assert the rendered template, instead, i assert whether the element shows up in the rendered partial.\r\n\r\nGIven if I want continue to use render_template in haml templates tests, do I have any other way to avoid that or how could covert the pure string into an http response?"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9791",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9791/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9791/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9791/events",
    "html_url": "https://github.com/rails/rails/issues/9791",
    "id": 12164870,
    "number": 9791,
    "title": "Removing Railtie::Configurable and replacing it with class methods",
    "user": {
      "login": "wangjohn",
      "id": 1075780,
      "avatar_url": "https://secure.gravatar.com/avatar/ddbca6015f428461aa5ed3b5f0fb74ab?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "ddbca6015f428461aa5ed3b5f0fb74ab",
      "url": "https://api.github.com/users/wangjohn",
      "html_url": "https://github.com/wangjohn",
      "followers_url": "https://api.github.com/users/wangjohn/followers",
      "following_url": "https://api.github.com/users/wangjohn/following",
      "gists_url": "https://api.github.com/users/wangjohn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wangjohn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wangjohn/subscriptions",
      "organizations_url": "https://api.github.com/users/wangjohn/orgs",
      "repos_url": "https://api.github.com/users/wangjohn/repos",
      "events_url": "https://api.github.com/users/wangjohn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wangjohn/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/railties",
        "name": "railties",
        "color": "8BE06E"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/24",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/24/labels",
      "id": 297919,
      "number": 24,
      "title": "4.1.0",
      "description": null,
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
        "gravatar_id": "0525b332aafb83307b32d9747a93de03",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User"
      },
      "open_issues": 4,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2013-03-27T19:29:42Z",
      "updated_at": "2013-04-23T17:22:30Z",
      "due_on": null
    },
    "comments": 2,
    "created_at": "2013-03-19T03:21:41Z",
    "updated_at": "2013-03-27T19:29:42Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9791",
      "diff_url": "https://github.com/rails/rails/pull/9791.diff",
      "patch_url": "https://github.com/rails/rails/pull/9791.patch"
    },
    "body": "I believe the reason ``Railtie::Configurable`` was created was so that the subclasses of the Railtie class would have the methods in the Configurable module (such as ``instance``, ``configure``, and ``method_missing``). However, the implementer of Railtie did not want Railtie itself to have these methods.\r\n\r\nThis was implemented by forcing all modules that inherit from Railtie to include the Configurable module like so:\r\n\r\n```ruby\r\nclass Railtie\r\n  class << self\r\n    def inherited(base)\r\n      base.send(:include, Railtie::Configurable)\r\n    end\r\n  ...\r\n  end\r\nend\r\n```\r\n\r\nThis isn't great because it forces all the subclasses of Railtie to have this module, which isn't ideal behavior. Instead, it would be nice to use inheritance to make sure these methods appear in subclasses of Railties.\r\n\r\nI've made it so that the Railtie class has the methods from Railtie::Configurable, and that Railtie itself cannot be instantiated and is effectively an abstract class.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9788",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9788/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9788/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9788/events",
    "html_url": "https://github.com/rails/rails/issues/9788",
    "id": 12163910,
    "number": 9788,
    "title": "[Rails 3.2.11] Asset pipeline returning \"not found\" for assets with certain long filenames",
    "user": {
      "login": "jakemauer",
      "id": 361568,
      "avatar_url": "https://secure.gravatar.com/avatar/38fa1b78afdd50e02d6862378cd175ec?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "38fa1b78afdd50e02d6862378cd175ec",
      "url": "https://api.github.com/users/jakemauer",
      "html_url": "https://github.com/jakemauer",
      "followers_url": "https://api.github.com/users/jakemauer/followers",
      "following_url": "https://api.github.com/users/jakemauer/following",
      "gists_url": "https://api.github.com/users/jakemauer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakemauer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakemauer/subscriptions",
      "organizations_url": "https://api.github.com/users/jakemauer/orgs",
      "repos_url": "https://api.github.com/users/jakemauer/repos",
      "events_url": "https://api.github.com/users/jakemauer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakemauer/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/asset+pipeline",
        "name": "asset pipeline",
        "color": "d7e102"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2013-03-19T02:31:11Z",
    "updated_at": "2013-04-14T14:51:28Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "I'm having an issue where font files with long filenames are 404'ing. \r\n\r\nFor example, given the following file: `/assets/fonts/fontcustom-1a2e07c9379f1449489ff0ef17823803.ttf`\r\n\r\nWhen calling it through SASS using\r\n  `font-url('fontcustom-1a2e07c9379f1449489ff0ef17823803.ttf')`\r\nit fails to load.\r\n\r\nBrowsing directly to the file at \r\n`localhost:3000/assets/fontcustom-1a2e07c9379f1449489ff0ef17823803.ttf`\r\nalso fails to load.\r\n\r\nHowever if you change the filename's hyphen `-` to an underscore `_`, like `fontcustom_1a2e07c9379f1449489ff0ef17823803.ttf`, and change the reference in the SASS file accordingly, it downloads correctly. \r\n\r\nAlso if you leave the hyphen but truncate some of the ending characters, it works. So \r\n`fontcustom-1a2e07.ttf` (in both the filesystem and SASS) works correctly. But one character more than that, `fontcustom-1a2e07c.ttf`, fails. \r\n\r\nAny idea what's going on here?"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9786",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9786/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9786/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9786/events",
    "html_url": "https://github.com/rails/rails/issues/9786",
    "id": 12156581,
    "number": 9786,
    "title": "Ensure that has_many :through counter cache decrements aren't doubled up",
    "user": {
      "login": "laserlemon",
      "id": 34264,
      "avatar_url": "https://secure.gravatar.com/avatar/0887991a8846577a6aa85433d6ab3ea2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "0887991a8846577a6aa85433d6ab3ea2",
      "url": "https://api.github.com/users/laserlemon",
      "html_url": "https://github.com/laserlemon",
      "followers_url": "https://api.github.com/users/laserlemon/followers",
      "following_url": "https://api.github.com/users/laserlemon/following",
      "gists_url": "https://api.github.com/users/laserlemon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laserlemon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laserlemon/subscriptions",
      "organizations_url": "https://api.github.com/users/laserlemon/orgs",
      "repos_url": "https://api.github.com/users/laserlemon/repos",
      "events_url": "https://api.github.com/users/laserlemon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laserlemon/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-03-18T21:58:02Z",
    "updated_at": "2013-03-19T19:49:21Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9786",
      "diff_url": "https://github.com/rails/rails/pull/9786.diff",
      "patch_url": "https://github.com/rails/rails/pull/9786.patch"
    },
    "body": "A has_many :through association must manage the counter cache of its\r\njoin model in case the join model is simply deleted (without callbacks)\r\nrather than destroyed when the association is cleared.\r\n\r\nThe problem is that if :dependent => :destroy is specified on the\r\nhas_many :through, the join model will be destroyed (triggering\r\ncallbacks). This means that the join model will decrement the counter\r\ncache in addition to the has_many :through association. As a result,\r\nthe counter cache is decremented twice.\r\n\r\nThe has_many :through association should only try to manage the counter\r\ncache if the join model is not destroyed."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9780",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9780/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9780/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9780/events",
    "html_url": "https://github.com/rails/rails/issues/9780",
    "id": 12148437,
    "number": 9780,
    "title": "actionmailer 3.2.13 requires \"mail ~> 2.5.3\" breaking compatibility",
    "user": {
      "login": "semmons99",
      "id": 27679,
      "avatar_url": "https://secure.gravatar.com/avatar/15163391a1545dbc2c5dba6c55e197f5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "15163391a1545dbc2c5dba6c55e197f5",
      "url": "https://api.github.com/users/semmons99",
      "html_url": "https://github.com/semmons99",
      "followers_url": "https://api.github.com/users/semmons99/followers",
      "following_url": "https://api.github.com/users/semmons99/following",
      "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
      "organizations_url": "https://api.github.com/users/semmons99/orgs",
      "repos_url": "https://api.github.com/users/semmons99/repos",
      "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/semmons99/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/regression",
        "name": "regression",
        "color": "e10c02"
      },
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionmailer",
        "name": "actionmailer",
        "color": "8B00FC"
      },
      {
        "url": "https://api.github.com/repos/rails/rails/labels/3-2-stable",
        "name": "3-2-stable",
        "color": "02d7e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 19,
    "created_at": "2013-03-18T18:58:09Z",
    "updated_at": "2013-04-05T23:03:03Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "we just upgraded to 3.2.13 from 3.2.12. actionmailer now appears to require mail ~> 2.5.3 which is causing us to receive `OpenSSL::SSL::SSLError: SSL_connect returned=1 errno=0 state=unknown state: unknown protocol` even though we explictly set `openssl_verify_mode` to `none`.\r\n\r\nhelp!"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9777",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9777/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9777/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9777/events",
    "html_url": "https://github.com/rails/rails/issues/9777",
    "id": 12145760,
    "number": 9777,
    "title": "3.2.13 regression - pluck is ignoring named scopes",
    "user": {
      "login": "xxx",
      "id": 41678,
      "avatar_url": "https://secure.gravatar.com/avatar/24b227939833d65d493e61e18680b62e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "24b227939833d65d493e61e18680b62e",
      "url": "https://api.github.com/users/xxx",
      "html_url": "https://github.com/xxx",
      "followers_url": "https://api.github.com/users/xxx/followers",
      "following_url": "https://api.github.com/users/xxx/following",
      "gists_url": "https://api.github.com/users/xxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xxx/subscriptions",
      "organizations_url": "https://api.github.com/users/xxx/orgs",
      "repos_url": "https://api.github.com/users/xxx/repos",
      "events_url": "https://api.github.com/users/xxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xxx/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/regression",
        "name": "regression",
        "color": "e10c02"
      },
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      },
      {
        "url": "https://api.github.com/repos/rails/rails/labels/3-2-stable",
        "name": "3-2-stable",
        "color": "02d7e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/23",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/23/labels",
      "id": 290916,
      "number": 23,
      "title": "3.2.14",
      "description": null,
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
        "gravatar_id": "0525b332aafb83307b32d9747a93de03",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User"
      },
      "open_issues": 2,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2013-03-18T18:15:43Z",
      "updated_at": "2013-04-15T14:17:02Z",
      "due_on": null
    },
    "comments": 10,
    "created_at": "2013-03-18T18:00:37Z",
    "updated_at": "2013-04-25T17:26:10Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "We have a query that looks like:\r\n\r\n`Photo.hottest.limit(10).pluck(\"photos.id\")`\r\n\r\nHottest is a named scope, defined as:\r\n\r\n    scope :hottest, lambda { |hotness_period = 24|\r\n      epoch = \"2012-04-26 23:36:54 UTC\"\r\n        \r\n      select(\"photos.*, (LOG(10, count(user_likes.id)) + (EXTRACT(EPOCH FROM photos.created_at - to_timestamp('#{epoch}', 'YYYY-MM-DD HH24:MI:SS'))/#{(hotness_period).hours.to_i})) AS hotness\").\r\n        joins(\"INNER JOIN user_likes ON user_likes.liked_id = photos.id\").\r\n        where(:user_likes => {:liked_type => 'Photo'}).\r\n        group(:liked_id, '\"photos\".\"id\"').\r\n        order(:hotness).\r\n        reverse_order\r\n    }\r\n\r\nIn 3.2.12, the generated query looks like\r\n\r\n    SELECT photos.*, (LOG(10, count(user_likes.id)) + (EXTRACT(EPOCH FROM photos.created_at - to_timestamp('2012-04-26 23:36:54 UTC', 'YYYY-MM-DD HH24:MI:SS'))/86400)) AS hotness, photos.id FROM \"photos\" INNER JOIN user_likes ON user_likes.liked_id = photos.id WHERE \"user_likes\".\"liked_type\" = 'Photo' GROUP BY liked_id, \"photos\".\"id\" ORDER BY hotness DESC LIMIT 10\r\n\r\nwhile in 3.2.13 it looks like\r\n\r\n    SELECT photos.id FROM \"photos\" INNER JOIN user_likes ON user_likes.liked_id = photos.id WHERE \"user_likes\".\"liked_type\" = 'Photo' GROUP BY liked_id, \"photos\".\"id\" ORDER BY hotness DESC LIMIT 10\r\n\r\n\r\nThis only happens when using `pluck`. Without it, the query is correct in 3.2.13."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/9776",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/9776/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/9776/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/9776/events",
    "html_url": "https://github.com/rails/rails/issues/9776",
    "id": 12143427,
    "number": 9776,
    "title": "Adding migrated_at timestamp to schema migrations",
    "user": {
      "login": "KensoDev",
      "id": 79502,
      "avatar_url": "https://secure.gravatar.com/avatar/b7d890bed68fa564c18ff00dfd8207cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "b7d890bed68fa564c18ff00dfd8207cd",
      "url": "https://api.github.com/users/KensoDev",
      "html_url": "https://github.com/KensoDev",
      "followers_url": "https://api.github.com/users/KensoDev/followers",
      "following_url": "https://api.github.com/users/KensoDev/following",
      "gists_url": "https://api.github.com/users/KensoDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KensoDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KensoDev/subscriptions",
      "organizations_url": "https://api.github.com/users/KensoDev/orgs",
      "repos_url": "https://api.github.com/users/KensoDev/repos",
      "events_url": "https://api.github.com/users/KensoDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KensoDev/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2013-03-18T17:08:56Z",
    "updated_at": "2013-03-18T17:26:27Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/rails/rails/pull/9776",
      "diff_url": "https://github.com/rails/rails/pull/9776.diff",
      "patch_url": "https://github.com/rails/rails/pull/9776.patch"
    },
    "body": "Knowing when a migration was executed is often really helpful when you\r\nare trying to track down a problem in production or any other\r\nenvironment for that matter.\r\n\r\nI found myself in that position lots of times, so I thought it's worth\r\nhaving this inside rails"
  }
]
